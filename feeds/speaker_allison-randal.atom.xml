<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_allison-randal.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2014-10-02T00:00:00+00:00</updated><entry><title>Pynie: Python 3 on Parrot (#148)</title><link href="https://pyvideo.org/pycon-us-2010/pycon-2010--pynie--python-3-on-parrot---148.html" rel="alternate"></link><published>2010-02-19T00:00:00+00:00</published><updated>2010-02-19T00:00:00+00:00</updated><author><name>Allison Randal</name></author><id>tag:pyvideo.org,2010-02-19:pycon-us-2010/pycon-2010--pynie--python-3-on-parrot---148.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Pyine: Python 3 on Parrot&lt;/p&gt;
&lt;p&gt;Presented by Allison Randal&lt;/p&gt;
&lt;p&gt;Pynie is an implementation of Python 3 on Parrot. The goal of Pynie is
to duplicate the pure-Python behavior of CPython 3.x, and perhaps
eventually a C API compatibility layer. Parrot provides a set of
compiler tools and core functionality common to many dynamic languages,
so the core code of Pynie is lightweight. Pynie allows Python 3
libraries to be shared between multiple languages. This talk is an
overview of the features Pynie currently supports and the work left to
be done, together with an introduction to the internals of Pynie.&lt;/p&gt;
</summary><category term="parrot"></category><category term="pycon"></category><category term="pycon2010"></category><category term="pyine"></category><category term="python3"></category></entry><entry><title>The Earth is not Flat (and other Heresies)</title><link href="https://pyvideo.org/pycon-za-2014/the-earth-is-not-flat-and-other-heresies.html" rel="alternate"></link><published>2014-10-02T00:00:00+00:00</published><updated>2014-10-02T00:00:00+00:00</updated><author><name>Allison Randal</name></author><id>tag:pyvideo.org,2014-10-02:pycon-za-2014/the-earth-is-not-flat-and-other-heresies.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Any decent textbook on astrophysics starts with a historical prologue
running something like this: &amp;quot;Once upon a time, we believed the earth
was flat. We were wrong. Once upon a time, we believed the sun rotated
around the earth. We were wrong.&amp;quot; It's a shame that computer science
textbooks don't start the same way: &amp;quot;Once upon a time, we believed that
all computer languages would be statically compiled. We were wrong. Once
upon a time, we believed that execution would always be single-threaded,
on a single processor, on a single machine. We were wrong.&amp;quot; The world of
technology is marching on toward ever more concurrent architectures,
also called &amp;quot;Cloud&amp;quot;, and various other buzzwords. The transition is at
once so mundane as to go unnoticed, and so fundamental as to shake the
very foundations of computer science. This talk explores the past,
present, and future of the &amp;quot;Cloud&amp;quot;, and the implications for Python and
other open source projects.&lt;/p&gt;
</summary><category term="pyconza"></category><category term="pyconza2014"></category></entry></feed>