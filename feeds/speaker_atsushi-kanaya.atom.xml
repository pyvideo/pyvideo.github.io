<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_atsushi-kanaya.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-09-20T00:00:00+00:00</updated><entry><title>マイクロサービスを利用する側のパフォーマンス向上策</title><link href="https://pyvideo.org/pycon-japan-2016/maikurosabisuwoli-yong-suruce-nopahuomansuxiang-shang-ce.html" rel="alternate"></link><published>2016-09-20T00:00:00+00:00</published><updated>2016-09-20T00:00:00+00:00</updated><author><name>Atsushi Kanaya</name></author><id>tag:pyvideo.org,2016-09-20:pycon-japan-2016/maikurosabisuwoli-yong-suruce-nopahuomansuxiang-shang-ce.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;マイクロサービスを利用する側として処理速度を向上するために、非同期IOやmultiprocessingを使った場合の事例を紹介します。&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;モノタロウではマイクロサービスを進めており、開発効率の向上など一定の成果を上げております。 マイクロサービスを利用する側もHTTP APIを利用する実装が済んでおり、現在は1リクエストあたりの処理効率を上げる取り組みを進めています。 マイクロサービスを利用する側として、Pythonにおける非同期IOやmultiprocessingを使った場合に、どのくらいリクエストの処理効率が向上するのか、実際に適用した場合にコーディングがどの程度複雑になるのかを説明します。&lt;/p&gt;
</summary></entry></feed>