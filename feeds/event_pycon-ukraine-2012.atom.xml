<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/event_pycon-ukraine-2012.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2012-10-21T00:00:00+00:00</updated><entry><title>Be Small and Simple</title><link href="https://pyvideo.org/pycon-ukraine-2012/be-small-and-simple.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Andrey Grygoryev</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/be-small-and-simple.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Некоторые наблюдения на личном опыте о излишней сложности реализации програмных продуктов, приводящем к наличию большого количества ошибок в конечном итоге и сложности дальнейшего сопровождения. Рассматриваю основные ошибки, которые совершал и с которыми сталкивался, приводящими в итоге к плачевному результату. Пытаюсь нащупать пути их решения. Так же рассматриваю примеры нескольких хороших решений и практик из мира Python, а так же за его пределами.&lt;/p&gt;
</summary></entry><entry><title>Closing talk</title><link href="https://pyvideo.org/pycon-ukraine-2012/closing-talk.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/closing-talk.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Final&lt;/p&gt;
</summary></entry><entry><title>Data-driven design with Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/data-driven-design-with-python.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Maksym Klymyshyn</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/data-driven-design-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Коротко о подходе где данные управляют кодом, а не наоборот. Описание подхода в целом, плюсы, минусы, альтенратива.&lt;/p&gt;
</summary></entry><entry><title>Debugging Python Applications in Production</title><link href="https://pyvideo.org/pycon-ukraine-2012/debugging-python-applications-in-production.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Vladimir Kirillov</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/debugging-python-applications-in-production.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Due to dynamic and interpreted nature of Python applications it's not hard to employ a limited set of debugging techniques in development and use a variety of debugging tools. However all nasty bugs tend to happen only in production, the very constrained environment without possibilities to edit code, restart, freeze or reconfigure in runtime to suspend services or scare the bug away. This talk is going to cover a set of techniques of debugging, tracing and profiling production Python code in Linux and Solaris environments (with focus on Linux). I'm going to show how to take advantage of GDB, strace, kernel memory, tcpdump, DTrace, SystemTap and all the related software tools to fully introspect what's going on in the Python-powered system.&lt;/p&gt;
</summary></entry><entry><title>Elebal, Conchelita, Concierge и другие герои веб-выборов</title><link href="https://pyvideo.org/pycon-ukraine-2012/elebal-conchelita-concierge-i-drugie-geroi-veb-vyborov.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Эдуард Снесарев</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/elebal-conchelita-concierge-i-drugie-geroi-veb-vyborov.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;100500 участков, три миллиона зрителей, петабайт видео -- что смогли Веб-выборы, всем известно. Мы хотим рассказать, как это удалось сделать.&lt;/p&gt;
&lt;p&gt;Мы опишем общую архитектуру проекта, познакомим вас с Elebal, Conchelita и Concierge, покажем примеры их мастерства и, наконец, объясним, при чем здесь питон&lt;/p&gt;
</summary></entry><entry><title>From Django to Pyramid</title><link href="https://pyvideo.org/pycon-ukraine-2012/from-django-to-pyramid.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Niko Skrypnik</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/from-django-to-pyramid.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Цель данного доклада - рассказать об опыте работы с набирающим популярность web-фреймворком Pyramid через призму концепций Django. В своем докладе я расскажу почему Pyramid это не Pylons, почему Zope в Pyramid не страшен и практически не заметен(при желании о нем можно вообще забыть), что общего и чего разного есть в Django и Pyramid и как быстро и безболезненно среднестатический программист на Django может начать работать с Pyramid. Также хотелось бы провести качественный анализ и рассмотреть сильные и слабые стороны этих двух фреймворков, но не с целью доказать что &amp;quot;вот этот новый фреймворк в сто раз лучше чем это важе Django&amp;quot;, а показать, в каком случае выгоднее будет использовать для разработки Django, а в каком лучше выбрать Pyramid.&lt;/p&gt;
</summary></entry><entry><title>GEO state in python world</title><link href="https://pyvideo.org/pycon-ukraine-2012/geo-state-in-python-world.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Vasyl Dizhak</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/geo-state-in-python-world.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Geography, not being a branch or direction in programming have found its place and grows side by side with it.&lt;/p&gt;
&lt;p&gt;Modern geo tools and services gives easy way to track, analyze and store data, generate nice and meaningful visualization, thus it is still a complicated and niche field. The aim of my presentation is to shed light into existing modules and systems that are build with python and can be successfully used for creating geographic services.&lt;/p&gt;
&lt;p&gt;Aside that, we will talk about way how to store and analyze spatial data and cover some basics about geo queries, measuring of objects and distances. Hope that you'l find this interesting and have a lot of fun along the way. Cheers.&lt;/p&gt;
</summary></entry><entry><title>Gunicorn &amp; Flower: 2 tools to help you in our concurrent world</title><link href="https://pyvideo.org/pycon-ukraine-2012/gunicorn-flower-2-tools-to-help-you-in-our-concurrent-world.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Benoit Chesneau</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/gunicorn-flower-2-tools-to-help-you-in-our-concurrent-world.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012 Benoit Chesneau. Gunicorn &amp;amp; Flower: 2 tools to help you in our concurrent world&lt;/p&gt;
</summary></entry><entry><title>In Flask we Trust</title><link href="https://pyvideo.org/pycon-ukraine-2012/in-flask-we-trust.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/in-flask-we-trust.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ul class="simple"&gt;
&lt;li&gt;Flask is not a new Django&lt;/li&gt;
&lt;li&gt;Requests and responses&lt;/li&gt;
&lt;li&gt;More about contexts and proxies&lt;/li&gt;
&lt;li&gt;Signed sessions&lt;/li&gt;
&lt;li&gt;All truth about applications and blueprints&lt;/li&gt;
&lt;li&gt;Multiple applications and multiple blueprints&lt;/li&gt;
&lt;li&gt;Extensions&lt;/li&gt;
&lt;li&gt;List of extensions you should know&lt;/li&gt;
&lt;li&gt;Deployment&lt;/li&gt;
&lt;li&gt;Is it fast? Compare with other Python frameworks&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Использование PostgreSQL в высоконагруженных проектах</title><link href="https://pyvideo.org/pycon-ukraine-2012/ispolzovanie-postgresql-v-vysokonagruzhennykh-proektakh.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Алексей Васильєв</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/ispolzovanie-postgresql-v-vysokonagruzhennykh-proektakh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PostgreSQL это многофункциональная реляционная база данных, вопрос об использовании которой каждый разработчик обязан рассмотреть. Почему? На данном докладе я хочу обсудить основные причины использования этой базы данных, а также её применение в проектах с высокой нагрузкой.&lt;/p&gt;
</summary></entry><entry><title>Its just too easy to make a mess</title><link href="https://pyvideo.org/pycon-ukraine-2012/its-just-too-easy-to-make-a-mess.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Konstantine Rybnikov</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/its-just-too-easy-to-make-a-mess.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;В последние годы тестирование стало горячей темой для обсуждения. Цель этого доклада в том, чтоб превратить разработку с помощью тестирования в обыденную вещь. Основные темы: - общие размышления на тему разработки ПО - обзор техник тестирования на различных уровнях - конкретные примеры различных способов тестирования&lt;/p&gt;
</summary></entry><entry><title>Как писать быстрый и эффективный код на Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/kak-pisat-bystryi-i-effektivnyi-kod-na-python.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Mikhail Korobov</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/kak-pisat-bystryi-i-effektivnyi-kod-na-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Введение: что такое морфологический анализ языка, зачем он нужен;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;как уместить 300-400Мб информации о словах в 10-15Мб и при этом обеспечить быстрый доступ к ним (на уровне C/C++ реализаций), в.т.ч без использования C/C++ расширений: структуры данных и приемы, cython vs pypy.&lt;/li&gt;
&lt;li&gt;пример: автокомплит для сайта за O(1) от количества элементов в базе с минимальным потреблением памяти.&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Lightning talk - Александр Лябах</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-aleksandr-liabakh.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Александр Лябах</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-aleksandr-liabakh.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks Александр Лябах&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Александр Соловьев</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-aleksandr-solovev.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Александр Соловьев</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-aleksandr-solovev.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks Александр Соловьев&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Андрей Светлов</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-andrei-svetlov.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Андрей Светлов</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-andrei-svetlov.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PyCon 2012 Lightning Talks Андрей Светлов&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Иван Колодяжный</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-ivan-kolodiazhnyi.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Иван Колодяжный</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-ivan-kolodiazhnyi.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PyCon 2012 Lightning Talks Иван Колодяжный&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Костя Лопухин</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-kostia-lopukhin.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Костя Лопухин</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-kostia-lopukhin.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PyCon 2012 Lightning Talks Костя Лопухин&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Learn Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-learn-python.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Igor Davydenko</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talk-learn-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks. Igor Davydenko&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning Talks 7</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talks-7.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Various speakers</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/lightning-talks-7.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. day 2
Lihting Talks 7&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Naive application of machine learning in software development</title><link href="https://pyvideo.org/pycon-ukraine-2012/naive-application-of-machine-learning-in-software-development.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Andriy Khavryuchenko</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/naive-application-of-machine-learning-in-software-development.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After briefly touching basics of machine learning and scikit-learning package I will describe naive ML application to estimate the time it takes to close tickets in django trac.&lt;/p&gt;
</summary></entry><entry><title>PyOpenCL - unleash your GPU with the help of Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/pyopencl-unleash-your-gpu-with-the-help-of-python.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Tomasz Rybak.</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/pyopencl-unleash-your-gpu-with-the-help-of-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Recent advances in the hardware development allow us to program wider range of devices - but those devices must be programmed using different programming models. There are libraries that can help us to program GPUs or FPGAs (for example OpenCL or CUDA) but they are written with C language in mind and focus on low-level details.&lt;/p&gt;
&lt;p&gt;Fortunately there are Python wrappers that take care of all the boring details allowing us to focus on the interesting aspects of programming GPU. This talk will introduce you to programming GPUs with the help of PyOpenCL and PyCUDA, and present techniques allowing you to get the most from your graphics card. After it, you will be able to run code both on your CPU and GPU!&lt;/p&gt;
</summary></entry><entry><title>Testing. A bit of everything</title><link href="https://pyvideo.org/pycon-ukraine-2012/testing-a-bit-of-everything.html" rel="alternate"></link><published>2012-10-21T00:00:00+00:00</published><updated>2012-10-21T00:00:00+00:00</updated><author><name>Andrey Zarubin</name></author><id>tag:pyvideo.org,2012-10-21:pycon-ukraine-2012/testing-a-bit-of-everything.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk is about why, what and how to test. It is brief overview of the testing concepts and techniques. I'd like to talk about the goals of testing (some of them are obvious and others are not) to show what exactly tests suppose to do. On other hand I would show some examples of how to do testing and where potential bottlenecks are. The talk is oriented on beginners and middle-skilled python programmers who already tried to write tests but I hope the programmers of any level will find something interesting in this talk.&lt;/p&gt;
</summary></entry><entry><title>Динамические хитрости в Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/dinamicheskie-khitrosti-v-python.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Andrey Vlasovskikh</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/dinamicheskie-khitrosti-v-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python — довольно динамический язык. В нём используется динамическая типизация, присутствуют средства интроспекции. Он позволяет получать доступ к таблицам локальных и глобальных переменных, стеку вызовов, настраивать механизмы импортов, расширять модули и объекты во время выполнения программы. По имеющимся динамическим средствам Python близок к языку Ruby, известному широким использованием monkey patching и других динамических приёмов. Но культура программирования на Python, кратко описанная в The Zen of Python, не поощряет повседневное применение динамических хитростей, оставляя их для случаев, где это действительно необходимо. В докладе будет рассморено, что позволяют сделать динамические особенности языка Python, в каких случаях их применение уместно и когда от их использования лучше воздержаться согласно The Zen of Python.&lt;/p&gt;
</summary></entry><entry><title>Эволюция архитектуры prom.ua</title><link href="https://pyvideo.org/pycon-ukraine-2012/evoliutsiia-arkhitektury-promua.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Taras Murashko.</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/evoliutsiia-arkhitektury-promua.html</id><summary type="html"></summary></entry><entry><title>Functional Programming with Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/functional-programming-with-python.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Alexey Kachayev</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/functional-programming-with-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Цель доклада: показать как можно писать выразительный и продуктивный код с использованием техник функциональной парадигмы&lt;/p&gt;
&lt;p&gt;Разделы:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Обзор функциональных языков и постулаты функционального программирования, интенсивная терапия по развеванию мифов&lt;/li&gt;
&lt;li&gt;Простые кейсы и разбор полетов: map/filter/reduce, iterators, generators &amp;amp; lazy processing, модуль itertools&lt;/li&gt;
&lt;li&gt;Функции высшего порядка, currying &amp;amp; partial execution в Python, модули functools и operator, использование и трактование декораторов&lt;/li&gt;
&lt;li&gt;Variables &amp;amp; definitions, mutable &amp;amp; immutable, scoping&lt;/li&gt;
&lt;li&gt;Состояние, хранение и изменение состояния, классы по отношению к состоянию и scoping-у&lt;/li&gt;
&lt;li&gt;Управление потоком выполнения или немного о том, чего не хватает и что нам с этим делать (monads, pattern matching, options etc)&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>Introduction to genetic programming and PyEvolve</title><link href="https://pyvideo.org/pycon-ukraine-2012/introduction-to-genetic-programming-and-pyevolve.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Michał Jastrzębski</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/introduction-to-genetic-programming-and-pyevolve.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Genetic programming is new approach to solving problems that are hard to define. It is based on Darwin's theory of evolution. Solution to problem is not computed, it evolves. PyEvolve is python framework for genetic programming. I would like to tell you about basic concepts which GP is based on, and show you how to write genetic programs in python.&lt;/p&gt;
</summary></entry><entry><title>Как всем перейти на Python 3.x</title><link href="https://pyvideo.org/pycon-ukraine-2012/kak-vsem-pereiti-na-python-3x.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Mikhail Korobov</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/kak-vsem-pereiti-na-python-3x.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Зачем переходить на 3.х? Как перевести свой код на 3.х? Как начинать проект под 3.х при том, что большинство библиотек под 3.х не работают? Как портировать библиотеки и чем это отличается от портирования &amp;quot;своего&amp;quot; кода? Расскажу об одной из возможных стратегий перехода (достаточно, на мой взгляд, практичной и безболезненной).&lt;/p&gt;
</summary></entry><entry><title>Let Them Configure!</title><link href="https://pyvideo.org/pycon-ukraine-2012/let-them-configure.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Łukasz Langa</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/let-them-configure.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A look at possible approaches to introducing configurability to your Python application, and a quick analysis of the most common problems.&lt;/p&gt;
&lt;p&gt;Today's JSON will be tomorrow's XML. Convention over configuration or configuration over hard-coded defaults? Should the user be given the freedom to decide or should the programmer free users from confusion over too many options?&lt;/p&gt;
&lt;p&gt;This talk presents answers to both sides of the argument. In the first part, I discuss different options for handling configuration in Python applications. Each will receive its share of benefits and problems, and some quick examples of how to use them in real code. In the second part, I describe things you can do right now to increase configurability of your existing applications.&lt;/p&gt;
&lt;p&gt;The final part will briefly introduce the new configparser module from Python 3.2.&lt;/p&gt;
</summary></entry><entry><title>Lightning talk - Cheapest Airfares on Earth</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-cheapest-airfares-on-earth.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Ilya Gluhovsky</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/lightning-talk-cheapest-airfares-on-earth.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks. Ilya Gluhovsky&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Gaffer</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-gaffer.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Benoit Chesneau</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/lightning-talk-gaffer.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks. Benoit Chesneau&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - Python 3</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-python-3.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Andrew Svetlov</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/lightning-talk-python-3.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. day1. Lightning Talks
Andrew Svetlov&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Lightning talk - SockJS-tornado</title><link href="https://pyvideo.org/pycon-ukraine-2012/lightning-talk-sockjs-tornado.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Сергей Коваль</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/lightning-talk-sockjs-tornado.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;UA PYCON 2012. Lightning Talks Сергей Коваль&lt;/p&gt;
</summary><category term="lightning talks"></category></entry><entry><title>Managing complexity</title><link href="https://pyvideo.org/pycon-ukraine-2012/managing-complexity.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Vsevolod Solovyov</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/managing-complexity.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Чем отличается простота и лёгкость решения. Что порождает сложность в решениях? Куда движется вся эта планета? Это рассказ не для слабонервных, беременным и детям вход воспрещëн.&lt;/p&gt;
</summary></entry><entry><title>Optimising Queries For Fun And Profit</title><link href="https://pyvideo.org/pycon-ukraine-2012/optimising-queries-for-fun-and-profit.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Andrew Godwin</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/optimising-queries-for-fun-and-profit.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lean about some common optimisations and anti-patterns before going on a deeper dive into relational databases - schema changes with no downtime, tuning indexes, using special column types and more, as well as some of the new features appearing in relational databases. The talk will have a focus on Django and PostgreSQL, but will also cover other databases and be helpful to people writing database code in any environment.&lt;/p&gt;
</summary></entry><entry><title>Partial evaluation in Python</title><link href="https://pyvideo.org/pycon-ukraine-2012/partial-evaluation-in-python.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Kostia Lopuhin</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/partial-evaluation-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Partial evaluation is a powerful optimization technique that allows you to use the strengths of Python (expressive, fast runtime), and avoid it's weaknesses (slow interpretation). It uses information available at run-time to generate specialized program code that runs faster than the generic one. Partial evaluation has a lot of successful applications, but is not widely used in the Python community.&lt;/p&gt;
&lt;p&gt;The talk will focus on:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;what is partial evaluation&lt;/li&gt;
&lt;li&gt;simple example of partial evaluation, it's analysis and benchmark&lt;/li&gt;
&lt;li&gt;when to use partial evaluation&lt;/li&gt;
&lt;li&gt;real-world example: 10x speedup of an OLAP calculation engine&lt;/li&gt;
&lt;li&gt;practical advice, problems, working around them&lt;/li&gt;
&lt;li&gt;partial evaluation library for Python&lt;/li&gt;
&lt;/ul&gt;
</summary></entry><entry><title>PyPy, ready for production (part 1)</title><link href="https://pyvideo.org/pycon-ukraine-2012/pypy-ready-for-production-part-1.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Amaury Forgeot d'Arc</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/pypy-ready-for-production-part-1.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyPy is probably the fastest Python implementation around. The first part of this talk will present various aspects of the implementation: the translation and analysis framework, and its famous tracing JIT. PyPy is no longer a research curiosity and is now suitable for production use. In the second part we'll talk about PyPy's present and future status, the compatibility issues you may encounter, and discuss for what kinds of applications it might be useful.&lt;/p&gt;
</summary></entry><entry><title>PyPy, ready for production (part 2)</title><link href="https://pyvideo.org/pycon-ukraine-2012/pypy-ready-for-production-part-2.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Amaury Forgeot d'Arc</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/pypy-ready-for-production-part-2.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyPy is probably the fastest Python implementation around. The first part of this talk will present various aspects of the implementation: the translation and analysis framework, and its famous tracing JIT. PyPy is no longer a research curiosity and is now suitable for production use. In the second part we'll talk about PyPy's present and future status, the compatibility issues you may encounter, and discuss for what kinds of applications it might be useful.&lt;/p&gt;
</summary></entry><entry><title>REPL Done Right</title><link href="https://pyvideo.org/pycon-ukraine-2012/repl-done-right.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Vladimir Pouzanov</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/repl-done-right.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk covers various strategies on REPL usage based around IPython. It includes both the basic ways to interact with Python shell and more complex and interesting scenarios, which are useful in daily work. You don't need any special knowledge about IPython to attend.&lt;/p&gt;
</summary></entry><entry><title>Request pipelining in python with greenlets</title><link href="https://pyvideo.org/pycon-ukraine-2012/request-pipelining-in-python-with-greenlets.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Павел Коломиец</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/request-pipelining-in-python-with-greenlets.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;What is request pipelining
Performance tests of different workloads
Various tips and tricks for programming with greenlets&lt;/p&gt;
</summary></entry><entry><title>Start as a Freelance Developer Become an Entrepreneur</title><link href="https://pyvideo.org/pycon-ukraine-2012/start-as-a-freelance-developer-become-an-entrepreneur.html" rel="alternate"></link><published>2012-10-20T00:00:00+00:00</published><updated>2012-10-20T00:00:00+00:00</updated><author><name>Kjetil Olsen</name></author><id>tag:pyvideo.org,2012-10-20:pycon-ukraine-2012/start-as-a-freelance-developer-become-an-entrepreneur.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Numerous highly skilled professional providers on Elance, and other work platforms, start working on the platform as freelancers, but end up running their own consultancy business.&lt;/p&gt;
&lt;p&gt;One of the key reasons for being able to expand from freelancer to a business is that they consistently deliver high quality work, earn a good reputation on the platform and win so many jobs that they can either subcontract the work to other Elancers or hire a team locally.&lt;/p&gt;
&lt;p&gt;This talk will focus on subjects like:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;How to become successful on online work platforms&lt;/li&gt;
&lt;li&gt;What the opportunities for developers are&lt;/li&gt;
&lt;li&gt;Advises on how to move from a freelancer to a business owner with on-site and online team members&lt;/li&gt;
&lt;li&gt;Key statistics on the online work market&lt;/li&gt;
&lt;li&gt;Case study on a local contractor that have been highly successful as an online freelancer&lt;/li&gt;
&lt;/ul&gt;
</summary></entry></feed>