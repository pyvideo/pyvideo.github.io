<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Saul Shanabrook</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_saul-shanabrook.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-12-07T00:00:00+00:00</updated><subtitle></subtitle><entry><title>metadsl: separating API from execution</title><link href="https://pyvideo.org/pydata-austin-2019/metadsl-separating-api-from-execution.html" rel="alternate"></link><published>2019-12-07T00:00:00+00:00</published><updated>2019-12-07T00:00:00+00:00</updated><author><name>Saul Shanabrook</name></author><id>tag:pyvideo.org,2019-12-07:/pydata-austin-2019/metadsl-separating-api-from-execution.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;metadsl is a Python framework for writing APIs that are detached from how they are executed. With it we can be framework agnostic definitions of concepts like 'arrays' and compile them to backends like Tensorflow or LLVM. In this talk, we will use metadsl to build high performance scientific â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;metadsl is a Python framework for writing APIs that are detached from how they are executed. With it we can be framework agnostic definitions of concepts like 'arrays' and compile them to backends like Tensorflow or LLVM. In this talk, we will use metadsl to build high performance scientific computing libraries.&lt;/p&gt;
</content><category term="PyData Austin 2019"></category><category term="metadsl"></category><category term="api framework"></category></entry><entry><title>Same API, Different Execution</title><link href="https://pyvideo.org/pydata-new-york-city-2019/same-api-different-execution.html" rel="alternate"></link><published>2019-11-04T00:00:00+00:00</published><updated>2019-11-04T00:00:00+00:00</updated><author><name>Saul Shanabrook</name></author><id>tag:pyvideo.org,2019-11-04:/pydata-new-york-city-2019/same-api-different-execution.html</id><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Can the Python data science and scientific computing ecoystem remain in the hands of community open source projects? Or will increasingly complex performance and hardware requirements leave room only for vertically integrated corporate sponsored projects?&lt;/p&gt;
</content><category term="PyData New York City 2019"></category></entry></feed>