<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_baejunhyeon.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2015-08-29T00:00:00+00:00</updated><entry><title>파이썬 메모리 이모저모</title><link href="https://pyvideo.org/pycon-korea-2015/paisseon-memori-imojeomo.html" rel="alternate"></link><published>2015-08-29T00:00:00+00:00</published><updated>2015-08-29T00:00:00+00:00</updated><author><name>배준현</name></author><id>tag:pyvideo.org,2015-08-29:pycon-korea-2015/paisseon-memori-imojeomo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;다른 언어에 비해 메모리에 대해 신경 쓸 부분이 없다시피 한 파이썬이지만,
가끔씩 내부 메모리 처리에 대한 사전 지식이 없어 쉬운 길을 멀리
돌아가거나 예상치 못한 버그를 마주할 때가 있습니다. 이 발표에서는
파이썬이 내부적으로 메모리를 어떻게 관리하고 객체들이 메모리에 실제로
어떻게 저장되는지, GC는 어떻게 동작하는지, 파이썬에 객체와 메모리에
관련된 함수들과 모듈들은 어떤게 있는지, monkey patch 등의 코딩을 한층
쉽게 만들어주는 메모리 관련 트릭들은 대표적으로 어떤 것들이 있는지
설명합니다.&lt;/p&gt;
&lt;p&gt;파이썬을 이제 막 시작한 초보자들과 어느정도 할 줄 아는 중급자들을
대상으로 합니다. 이미 파이썬을 잘 하시는 고급 사용자분들께는 발표가
지루하고 심심하실 수도 있으니 참고해주세요. C/C++ 프로그래밍을 해 보신
경험이 있으시면 이해가 더 쉬울 수도 있습니다.&lt;/p&gt;
</summary></entry><entry><title>Python 3.4: AsyncIO</title><link href="https://pyvideo.org/pycon-korea-2014/python-34-asyncio.html" rel="alternate"></link><published>2014-08-30T00:00:00+00:00</published><updated>2014-08-30T00:00:00+00:00</updated><author><name>배준현</name></author><id>tag:pyvideo.org,2014-08-30:pycon-korea-2014/python-34-asyncio.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;비동기와 코루틴에 대한 간단한 설명과 함께 Python 3.4에 추가된
Asynchronous I/O 라이브러리인 asyncio에 대해 설명하고, 기존에 나와있는
gevent 등의 프레임워크와의 차별점에 대해 설명합니다.&lt;/p&gt;
&lt;p&gt;그리고 기존에 threading 기반으로 짜여져있던 간단한 HTTP 투명 프록시를
asyncio로 다시 짜는 과정을 통해 코드를 비교하여 파이썬에서 비동기 작업을
구현하는 방법에 대해 논의해봅니다.&lt;/p&gt;
</summary></entry></feed>