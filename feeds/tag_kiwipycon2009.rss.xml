<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sat, 07 Nov 2009 00:00:00 +0000</lastBuildDate><item><title>Brendan McCane - Introductory programming with Python</title><link>https://pyvideo.org/kiwi-pycon-2009/brendan-mccane---introductory-programming-with-py.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introductory programming with Python&lt;/p&gt;
&lt;p&gt;Presented by Brendan McCane&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In first semester 2009, CS at Otago introduced an introductory
programming course using Python. This talk will describe the course and
student outcomes.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The talk will cover the following topics: - the problems of teaching and
learning programming - does language make a difference? - why Python is
a good choice for a first language - the structure of the course -
things that worked well, and things that didn't - what students thought
about it - impact on learning Java in the second semester - changes for
2010 Note: this is a preliminary outline, it's likely that it will
change somewhat before the conference.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brendan McCane</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/brendan-mccane---introductory-programming-with-py.html</guid><category>education</category><category>kiwipycon</category><category>kiwipycon2009</category></item><item><title>Brian Thorne - Computer Vision</title><link>https://pyvideo.org/kiwi-pycon-2009/brian-thorne---computer-vision.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Computer Vision&lt;/p&gt;
&lt;p&gt;Presented by Brian Thorne&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;An introduction to computer vision in Python, from the general concept
to its implementation with some current open-source libraries (opencv,
scipy, pygame).&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The purpose of my presentation is an introduction to computer vision
(CV) and image processing in Python. I will aim to show what is possible
with current libraries, demonstrate their usability, explore their
limitations, and cover elements of best coding practice. Firstly, I will
briefly present the basics, such as video grabbing, image processing and
computer vision algorithms. I will illustrate my presentation with the
Python bindings to the opencv library and show different examples such
as displaying a video image, some filtering algorithms (dilation,
gaussian blur), and how to implement facial recognition. I will describe
after how related tasks can be achieved with other Python tools such as
scipy and pygame. I will show how these three libraries can be used in
conjunction to perform video capturing, image processing and user
interfacing. Finally, I will introduce my basic Python computer vision
framework, which is aimed at inexperienced users, and demonstrate it on
the XO laptop, the inexpensive low-powered sub-notebook distributed as
part of the One Laptop Per Child (OLPC) initiative.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brian Thorne</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/brian-thorne---computer-vision.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>olpc</category><category>pygame</category><category>scipy</category><category>vision</category></item><item><title>Douglas Bagnall - pyserf - a shortcut for writing C extensions in C</title><link>https://pyvideo.org/kiwi-pycon-2009/douglas-bagnall---pyserf---a-shortcut-for-writing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;pyserf - a shortcut for writing C extensions in C&lt;/p&gt;
&lt;p&gt;Presented by Douglas Bagnall&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;There are many clever ways of connecting Python and C code together, and
pyserf is one of those. It is just a short script that parses a module
outline and produces an idiomatic template for a C extension providing
the same signatures, so all you need to do is write the bits that
actually do stuff.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Pyserf is a tiny project that I wrote for my own use years ago and never
released because it is so obvious that dozens of better versions must
exist. The idea is simple -- you write an outline of a module like this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;quot;&amp;quot;&amp;quot;module documentation&amp;quot;&amp;quot;&amp;quot;
def top_level_function(int_a, float_b):
   &amp;quot;function documentation&amp;quot;
   return float_c

class SomeModule:
   &amp;quot;&amp;quot;&amp;quot;class documentation&amp;quot;&amp;quot;&amp;quot;
   def foo(self, int_ants obj_zoo):
      &amp;quot;&amp;quot;&amp;quot;method documentation&amp;quot;&amp;quot;&amp;quot;
      return float_frogs
&lt;/pre&gt;
&lt;p&gt;and pyserf uses the parsing modules in the standard library to generate
a C file that will compile to an extension providing the interface it
describes, with the documentation appearing in the right place and the
type conversions all properly handled. The generated file is not a
hideous unreadable mess, rather it is within a few characters of best
practise according to the official tutorial. Once you have this
template, you abandon your outline and write the middles of each
function in C. In describing what pyserf does, this talk will
demonstrate what is required to write an extension in C by hand, and
show you some ways of using the standard libraries parsing modules.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Douglas Bagnall</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/douglas-bagnall---pyserf---a-shortcut-for-writing.html</guid><category>extensions</category><category>kiwipycon</category><category>kiwipycon2009</category><category>pyserf</category></item><item><title>Douglas Bagnall - Te Tuhi Video Game System</title><link>https://pyvideo.org/kiwi-pycon-2009/douglas-bagnall---te-tuhi-video-game-system.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Te Tuhi Video Game System&lt;/p&gt;
&lt;p&gt;Presented by Douglas Bagnall&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Tetuhi is a python program that turns drawings on paper into 2D top-down
early 80s style video games. This talk describes how.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Te Tuhi Video Game System is not a game in itself; rather it creates
games based on arbitrary images that it is given. To use it, you draw a
picture of the game you want to play, and it will give you the game that
you really drew. The software was originally written for an art exhibit
using slightly specialised hardware, but it has been released under the
GPL and runs on ordinary computers. It uses Pygame, PIL, and custom C
extensions that allow it to evolve a playable game from a wide variety
of pictures. This talk will discuss the techniques used (both refined
algorithms and hacky heuristics) and cover topics such as image
analysis, machine learning, and interface design. There will be a
demonstration.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Douglas Bagnall</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/douglas-bagnall---te-tuhi-video-game-system.html</guid><category>c</category><category>gpl</category><category>kiwipycon</category><category>kiwipycon2009</category><category>pil</category><category>pygame</category></item><item><title>Grant Paton-Simpson - SOFA Statistics - Developing, packaging, and promoting a Python open source project</title><link>https://pyvideo.org/kiwi-pycon-2009/grant-paton-simpson---sofa-statistics---developin.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;SOFA Statistics - Developing, packaging and promoting a Python open
source project&lt;/p&gt;
&lt;p&gt;Presented by Grant Paton-Simpson&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Overview of an open source Python project. Will cover wxPython (GUI
toolkit) plus graphics generally; quirks of different databases; making
python installer packages; using Sourceforge, Freshmeat, and Launchpad
(and Bazaar); and promoting the project.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;SOFA Statistics (&lt;a class="reference external" href="http://www.sofastatistics.com/"&gt;http://www.sofastatistics.com/&lt;/a&gt;) is an open source
desktop Python application with an emphasis on ease of use, learn as you
go, and beautiful output. The talk will cover technical aspects of the
project as well as project management issues. Specific areas covered
will include:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Using the cross-platform GUI toolkit wxPython (including wxWebKit and
the grid widgets) plus initial exploration of Matplotlib and Raphael
(Javascript and SVG)&lt;/li&gt;
&lt;li&gt;Experience using different database engines including SQLite, MySQL,
MS Access, and MS SQL Server&lt;/li&gt;
&lt;li&gt;Issues with standard statistics modules e.g. in SciPy&lt;/li&gt;
&lt;li&gt;Making python installer packages â€“ currently only deb packages and
Windows installers (using NSIS). Plus managing releases.&lt;/li&gt;
&lt;li&gt;Using Sourceforge, Freshmeat, and Launchpad (including Bazaar)&lt;/li&gt;
&lt;li&gt;Promoting the project through blogging, answering posts e.g. Ubuntu,
wikipedia, special aggregator lists and reviews, presentations,
articles, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Questions are very welcome as this is a very broad topic.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Grant Paton-Simpson</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/grant-paton-simpson---sofa-statistics---developin.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>launchpad</category><category>opensource</category><category>sofa</category><category>sourceforge</category></item><item><title>Guy Kloss - Python Data Plotting and Visualisation Extravaganza</title><link>https://pyvideo.org/kiwi-pycon-2009/guy-kloss---python-data-plotting-and-visualisatio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python Data Plotting and Visualization Extravaganza&lt;/p&gt;
&lt;p&gt;Presented by Guy Kloss&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In various fields data is accumulated or produced. This can be
observation data, statistical data, simulation data, ... Information
like that can in many cases be much more easily analysed through the
user's eyes employing data visualisation. This talk is trying to dive
briefly into various means and tools to visually analyse data of
different qualities: time series, simple 2D plots, surface plots, volume
plots, quiver plots, etc.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;I am planning on doing a &amp;quot;fly by&amp;quot; through the world of data
visualisation for different types of data using different tools. Types
of data:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;1D data and simple functions&lt;/li&gt;
&lt;li&gt;2D data for surface plots&lt;/li&gt;
&lt;li&gt;3D data through quiver plots, iso surfaces, and cutting planes&lt;/li&gt;
&lt;li&gt;n-D data through different means&lt;/li&gt;
&lt;li&gt;continuous and non-continuously structured data&lt;/li&gt;
&lt;li&gt;time series&lt;/li&gt;
&lt;li&gt;real time data visualisation/analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The tools that will probably appear in the demos and discussions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;GNUplot&lt;/li&gt;
&lt;li&gt;matplotlib&lt;/li&gt;
&lt;li&gt;Mayavi2&lt;/li&gt;
&lt;li&gt;Visual Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Guy Kloss</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/guy-kloss---python-data-plotting-and-visualisatio.html</guid><category>data</category><category>gnuplot</category><category>kiwipycon</category><category>kiwipycon2009</category><category>matplotlib</category><category>mayavi2</category><category>plotting</category><category>visualpython</category></item><item><title>Indy Liu - Building web animation application with Python-Ogre</title><link>https://pyvideo.org/kiwi-pycon-2009/indy-liu---building-web-animation-application-wit.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Building web animation application with Python-ogre&lt;/p&gt;
&lt;p&gt;Presented by Indy Liu&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In building our online user-customisable animation system, we needed a
3D engine that is powerful, stable and flexible. We are lucky to have
made python-ogre our choice. Combined with FFMpeg and the boto library,
we were able to build the whole solution in python with as little hassle
as possible.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Open source python game engines;&lt;/li&gt;
&lt;li&gt;What we need - Not just a game engine;&lt;/li&gt;
&lt;li&gt;What you can do with python-ogre;&lt;/li&gt;
&lt;li&gt;Combining with other libraries FFMpeg, boto;&lt;/li&gt;
&lt;li&gt;Interfacing with the web - celery;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Indy Liu</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/indy-liu---building-web-animation-application-wit.html</guid><category>boto</category><category>celery</category><category>ffmpeg</category><category>kiwipycon</category><category>kiwipycon2009</category><category>ogre</category></item><item><title>Joel Burton - A Smart Introduction to Plone</title><link>https://pyvideo.org/kiwi-pycon-2009/joel-burton---a-smart-introduction-to-plone.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A smart introduction to Plone&lt;/p&gt;
&lt;p&gt;Presented by Joel Burton&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The world of online content management systems has become so enormous
that it can be difficult to weigh the advantages--and disadvantages--of
the systems. The speaker, a noted Plone author and consultant, will
demonstrate the featureset of Plone, and provide real-world hints on the
customer value and challenges it provides.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Here, you can learn where Plone may serve your needs well, and where it
might be overkill or inappropriately deployed. You'll also learn
approximate budgets, in time and learning, you'd need to get up to speed
on the system. In addition, a demonstration of the upcoming features of
Plone 4 and a future- looking glance at the radically-redesigned Plone 5
will be given. Recommended for new and casual users of Plone, and for
people interested in understanding its niche in the CMS/application
development world.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel Burton</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/joel-burton---a-smart-introduction-to-plone.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>plone</category></item><item><title>Joel Burton - Why Python Web Frameworks are Changing the Web</title><link>https://pyvideo.org/kiwi-pycon-2009/joel-burton---why-python-web-frameworks-are-chang.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Why Python web frameworks are changing the web&lt;/p&gt;
&lt;p&gt;Presented by Joel Burton&lt;/p&gt;
&lt;p&gt;Keynote.&lt;/p&gt;
&lt;p&gt;Slides from the keynote:
&lt;a class="reference external" href="http://www.slideshare.net/joelburton/why-python-web"&gt;http://www.slideshare.net/joelburton/why-python-web&lt;/a&gt;-
frameworks-are-changing-the-web&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel Burton</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/joel-burton---why-python-web-frameworks-are-chang.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>plone</category><category>pylons</category><category>turbogears</category><category>web</category><category>zope</category></item><item><title>Lightning talks</title><link>https://pyvideo.org/kiwi-pycon-2009/lightning-talks.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lightning Talks&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Morris Jones (Simple robot using python on a wifi router)&lt;/li&gt;
&lt;li&gt;John Graves (Voice interaction)&lt;/li&gt;
&lt;li&gt;Charles Manning (A noob does ctypes)&lt;/li&gt;
&lt;li&gt;Raazesh Sainudiin (Computational Statistical Laboratories with SAGE
Notebook Server)&lt;/li&gt;
&lt;li&gt;Juergen Brendel (WSGI is easy)&lt;/li&gt;
&lt;li&gt;Michael Hoppe (Basic data acquisition and analysis)&lt;/li&gt;
&lt;li&gt;Carl Cerecke (A faster, cleaner goto statement)&lt;/li&gt;
&lt;li&gt;Douglas Bagnall (Booki, Objavi, Espri: the FLOSS Manuals publishing
suite)&lt;/li&gt;
&lt;li&gt;Peter Harrison (Introduction to Autonomous Systems)&lt;/li&gt;
&lt;li&gt;Jim Tittsler (Educational Content Packaging)&lt;/li&gt;
&lt;li&gt;David Hood (Little lies to tell when teaching Python Programming)&lt;/li&gt;
&lt;li&gt;Dylan Jay (How to host Python app for $20 in 20mins -
collective.hostout)&lt;/li&gt;
&lt;li&gt;Greg Hewgill (PSIL - Python S-expression Intermediate Language)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Morris Jones</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/lightning-talks.html</guid><category>lightning talks</category><category>ctypes</category><category>flossmanuals</category><category>goto</category><category>kiwipycon</category><category>kiwipycon2009</category><category>packaging</category><category>psil</category><category>robot</category><category>wsgi</category></item><item><title>Michael Dunstan - Testing Demo</title><link>https://pyvideo.org/kiwi-pycon-2009/michael-dunstan---testing-demo.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Testing Demo&lt;/p&gt;
&lt;p&gt;Presented by Michael Dunstan&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Live demo of writing code and tests.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;This live demo is intended for people that have not seen test driven
development in action before. See what a failing test should look like.
And then I'll attempt to write some code to make that test pass so that
you can see what a successful test run looks like - I may need some help
from the audience at that point. Along the way you'll see various
features of the test framework 'nose' in action and even some doctests.
This will be a second attempt of the stunt first performed:
&lt;a class="reference external" href="http://nzpug.org/MeetingsAuckland/August2009"&gt;http://nzpug.org/MeetingsAuckland/Augus
t2009.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/michaeldunstan/testing-%20workshop-2455697"&gt;http://www.slideshare.net/michaeldunstan/testing-
workshop-2455697&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Dunstan</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/michael-dunstan---testing-demo.html</guid><category>doctests</category><category>kiwipycon</category><category>kiwipycon2009</category><category>tdd</category><category>testing</category></item><item><title>Michael Hudson - How we use Twisted in Launchpad</title><link>https://pyvideo.org/kiwi-pycon-2009/michael-hudson---how-we-use-twisted-in-launchpad.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;How we use Twisted in Launchpad&lt;/p&gt;
&lt;p&gt;Presented by Michael Hudson-Doyle&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Launchpad is a large, open source, &amp;quot;real world&amp;quot; Python project with many
moving parts. This talk will explain how Twisted helps us keep track of
them.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Although we don't use it for the core web application, most other places
in Launchpad that have to deal with concurrency issues do it using
Twisted. This talk will survey these areas and talk about issues we've
found and design patterns we've found helpful.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Hudson-Doyle</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/michael-hudson---how-we-use-twisted-in-launchpad.html</guid><category>casestudy</category><category>kiwipycon</category><category>kiwipycon2009</category><category>launchpad</category><category>twisted</category></item><item><title>Michael Hudson-Doyle - An Introduction to PyPy</title><link>https://pyvideo.org/kiwi-pycon-2009/michael-hudson-doyle---an-introduction-to-pypy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;An introduction to PyPy&lt;/p&gt;
&lt;p&gt;Presented by Michael Hudson-Doyle&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;An overview of the ideas behind the project, its current status, future
plans and why you should care about it.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The core idea of PyPy is to produce a flexible and fast implementation
of the Python programming language. The talk will cover the interpreter,
translator and jit parts of the code and their relationships and the
fundamental ways in which PyPy differs from other virtual machine
implementations.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Michael Hudson-Doyle</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/michael-hudson-doyle---an-introduction-to-pypy.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>pypy</category></item><item><title>Richard Jones - Making Django awesomer</title><link>https://pyvideo.org/kiwi-pycon-2009/richard-jones---making-django-awesomer.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Making Django awesomer&lt;/p&gt;
&lt;p&gt;Presented by Richard Jones&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In this talk I will present a number of extensions to the core of Django
that will make your life a lot easier and/or awesomer.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;I will:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;talk about how to find extensions,&lt;/li&gt;
&lt;li&gt;walk through installing some common extensions,&lt;/li&gt;
&lt;li&gt;look at the functionality provided by some developer tools, and&lt;/li&gt;
&lt;li&gt;demonstrate the power of a social networking site extension&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Attendees should have some familiarity with Django.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/richard-jones---making-django-awesomer.html</guid><category>kiwipycon</category><category>kiwipycon2009</category></item><item><title>Richard Jones - Tkinter doesn't suck, honest</title><link>https://pyvideo.org/kiwi-pycon-2009/richard-jones---tkinter-doesn--39-t-suck--honest.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tkinter doesn't suck, honest&lt;/p&gt;
&lt;p&gt;Presented by Richard Jones&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;In this talk I hope to dispel the myth that Tkinter just plain sucks
through the use of some concrete examples of simple use resulting in
effective user interfaces.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;I intend to cover some basics of getting Tkinter GUIs up and running,
and then look at some simple use-cases, including: - file dialogs in
minutes - script configuration dialog - basics of interface design /
packing - a look at the widgets built in - a look at some of the
extensions&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Jones</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/richard-jones---tkinter-doesn--39-t-suck--honest.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>tkinter</category></item><item><title>Richard Tew - Stackless Python 101</title><link>https://pyvideo.org/kiwi-pycon-2009/richard-tew---stackless-python-101.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Stackless Python 101&lt;/p&gt;
&lt;p&gt;Presented by Richard Tew&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;An introduction to Stackless Python, showing what it is useful for and
how to use it.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The talk would start by describing what Stackless Python is, and the
reasons why you would use it. Next it would cover how to use Stackless
Python. And finally, what the limitations of a green threading framework
like this are and what needs to be done to cater for them.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Richard Tew</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/richard-tew---stackless-python-101.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>stackless</category></item><item><title>Robert Coup - /me wants it. Scraping sites to get data.</title><link>https://pyvideo.org/kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;/me wants it. Scraping sites to get data.&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Building scrapers for grabbing data from websites. Tools, techniques,
and tips.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Life would be so much easier if the data contained in websites was
available raw via APIs. Alas, until that mythical day comes we either
need to deal with unhelpful people via email and phone, or just get it
ourselves. Python has some great tools available to help with building
scrapers and for parsing and formatting the data we get. Starting off
with the basics - tracking what needs to be done, making web requests,
parsing HTML, following links, and extricating data from Excel and PDF
documents. Our scraper needs to be resilient against too-clever content
management systems, Frontpage-era HTML, and plain dodgy data. We may
need to pass through logins and other messiness. There are some
techniques and tips for approaching the problems and keeping your
solution flexible and as simple as possible. We'll discuss some scrapers
built for New Zealand data, and introduce a new project from the NZ open
government data group to provide a RESTful interface to scrapers -
effectively creating a nice API where there isn't one.&lt;/p&gt;
&lt;p&gt;Slides:
&lt;a class="reference external" href="http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-data"&gt;http://www.slideshare.net/rcoup/me-wants-it-scraping-sites-to-get-
data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Coup</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/robert-coup----me-wants-it--scraping-sites-to-get.html</guid><category>api</category><category>html</category><category>kiwipycon</category><category>kiwipycon2009</category><category>rest</category><category>scraping</category><category>web</category></item><item><title>Robert Coup - Monitoring and debugging your live applications</title><link>https://pyvideo.org/kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Monitoring and debugging your live application&lt;/p&gt;
&lt;p&gt;Presented by Robert Coup&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Ever wondered what is going on inside your app? Learn some tools and
ideas you can use for sussing it out.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Debugging issues in live applications can be a real nightmare. Add some
more logging, restart it, wait for the failure/load case and try and
deduce a bit more. Even with awesome test coverage you still need to
debug those tricky problems. This talk will introduce some ideas for
monitoring and debugging your live applications. The key things to cover
are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;the standard logging module and learning how to drive it well. How to
log effectively so it makes sense later, and what sorts of things we
should be instrumenting and measuring.&lt;/li&gt;
&lt;li&gt;how to set up a remote console session into our running application,
so we can interrogate variables and run code to figure out what's
going on.&lt;/li&gt;
&lt;li&gt;how to incorporate IRC or IM bots so we can interact with our apps
from the desktop, and how they can interact with us.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Robert Coup</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/robert-coup---monitoring-and-debugging-your-live-.html</guid><category>debugging</category><category>im</category><category>irc</category><category>kiwipycon</category><category>kiwipycon2009</category><category>logging</category></item><item><title>Roman Joost - Get started with Zope3</title><link>https://pyvideo.org/kiwi-pycon-2009/roman-joost---get-started-with-zope3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Get started with Zope3&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces Zope 3, the main differences to Zope (2) and how to
get started.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The Zope application server exist for nearly a decade now. One of the
biggest changes to the Zope architecture was the rewrite of the
framework and an introduction of a component architecture. Zope 3 was
born. The talk covers how developers can bootstrap a Zope 3 project
using buildout, what the differences between Zope (2) and Zope 3 is, how
views and models are created and registered, how third party
applications are used and how common pitfalls can be avoided.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roman Joost</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---get-started-with-zope3.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>web</category><category>zope</category><category>zope3</category></item><item><title>Roman Joost - Grok or how Zope3 reinvented itself</title><link>https://pyvideo.org/kiwi-pycon-2009/roman-joost---grok-or-how-zope3-reinvented-itself.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Grok or how Zope3 reinvented itself&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces how to quickly and easily create web applications
with Grok, a web framework based on Zope3 (&lt;a class="reference external" href="http://grok.zope.org/"&gt;http://grok.zope.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Grok is a web application framework based on Zope 3 - the popular
application server. One of the main aspects of Grok is the rapid
development of web applications without losing the flexibility Zope 3
provides. The talk covers a quick introduction to Zope 3 and Grok. Based
on an example, I will provide a quick walk through on how easy it is to
create sophisticated web applications with Grok. Additionally, the talk
outlines pitfalls for newcomers and how to avoid them.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roman Joost</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---grok-or-how-zope3-reinvented-itself.html</guid><category>grok</category><category>kiwipycon</category><category>kiwipycon2009</category><category>web</category><category>zope3</category></item><item><title>Roman Joost - Interfacing with GIMP using Python</title><link>https://pyvideo.org/kiwi-pycon-2009/roman-joost---interfacing-with-gimp-using-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Interfacing with GIMP using Python&lt;/p&gt;
&lt;p&gt;Presented by Roman Joost&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;The talk introduces how developers can extend and interface with the GNU
Image manipulation program using Python.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The presentation will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;a quick overview of programmatic interfaces for GIMP&lt;/li&gt;
&lt;li&gt;a quick introduction in plug-in writing for GIMP&lt;/li&gt;
&lt;li&gt;based on an example plug-in how to interface with GIMP&lt;/li&gt;
&lt;li&gt;potential pitfalls and how to avoid them&lt;/li&gt;
&lt;li&gt;based on an example how to interface with GEGL, the next image
manipulation core for GIMP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Roman Joost</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/roman-joost---interfacing-with-gimp-using-python.html</guid><category>gimp</category><category>kiwipycon</category><category>kiwipycon2009</category></item><item><title>Stuart Mitchell - Operations research and Optimization in Python using Pulp</title><link>https://pyvideo.org/kiwi-pycon-2009/stuart-mitchell---operations-research-and-optimiz.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Operations research and optimization in Python using Pulp&lt;/p&gt;
&lt;p&gt;Presented by Stuart Mitchell&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Operations research has the catch phrase &amp;quot;The science of better&amp;quot;. In
this talk we will discuss what a linear programming problem is and how
to solve one using the pulp-or package.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;TBA hopefully to include a relevant example possibly a python
implementation of graphviz.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stuart Mitchell</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/stuart-mitchell---operations-research-and-optimiz.html</guid><category>graphviz</category><category>kiwipycon</category><category>kiwipycon2009</category></item><item><title>Tim Knapp - Getting All Your Web Apps To Wear The Company Brand</title><link>https://pyvideo.org/kiwi-pycon-2009/tim-knapp---getting-all-your-web-apps-to-wear-the.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Getting all your web apps to wear the company brand&lt;/p&gt;
&lt;p&gt;Presented by Tim Knapp&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Cross-platform theming! No matter what the platform/language, you can
seamlessly apply 1 theme across all your disparate web applications.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;The technology is called Deliverance and Tim Knapp will demonstrate how
to use this powerful tool to theme your web applications.&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Knapp</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/tim-knapp---getting-all-your-web-apps-to-wear-the.html</guid><category>deliverance</category><category>kiwipycon</category><category>kiwipycon2009</category><category>plone</category></item><item><title>Tim McNamara - OLPC XO: Python bringing education to the world's poorest children</title><link>https://pyvideo.org/kiwi-pycon-2009/tim-mcnamara---olpc-xo--python-bringing-education.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;OLPC XO: Python bringing education to the world's poorest children&lt;/p&gt;
&lt;p&gt;Presented by Tim McNamara&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;This topic will be divided into five different area of 10 minutes each,
with time for questions and discussion. We'll talk about the OLPC
programme, the hardware, the software, the educational theory and how to
get involved NZ.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;In defence of the OLPC XO This section will be a brief overview of
the whole project hopefully with an eye to dispel some rumour and
controversy surrounding the project. There has been several mixed
messages, and I would like to&lt;/li&gt;
&lt;li&gt;Overview of the hardware In this section, the talk to move into a
discussion about the overview of the hardware itself. There will be
several machines for the audience to have a look at, and we'll try
and test some of the mesh networking, collaboration and sharing
capabilities that are built into the machine.&lt;/li&gt;
&lt;li&gt;Overview of the software The OLPC XO is run using a Python
environment called Sugar
(&lt;a class="reference external" href="http://sugarlabs.org.nz/"&gt;http://sugarlabs.org.nz&lt;/a&gt;), which
itself is a Fedora Remix. We will talk a little about how an Activity
is built and how to start contributing to the Sugar system.&lt;/li&gt;
&lt;li&gt;How to deploy into schools This segment will go over some of the
theoretical underpinnings of the user interface and Sugar's approach
to things like the directory structure. We'll also explore some of
the tools that teachers and parents can use to progressively
encourage their children to learn about computing and develop
creative and critical thinking.&lt;/li&gt;
&lt;li&gt;How to get involved There are small pockets of XOs around the
country. Learn where they are and how to start improving them!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim McNamara</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/tim-mcnamara---olpc-xo--python-bringing-education.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>olpc</category></item><item><title>Tim Penhey - Launchpad: The Good, the Bad, and the OMG How Does That Work</title><link>https://pyvideo.org/kiwi-pycon-2009/tim-penhey---launchpad--the-good--the-bad--and-th.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Launchpad: The Good, The Bad, and the OMG How Does That Work&lt;/p&gt;
&lt;p&gt;Presented by Tim Penhey&lt;/p&gt;
&lt;p&gt;Keynote&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tim Penhey</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/tim-penhey---launchpad--the-good--the-bad--and-th.html</guid><category>kiwipycon</category><category>kiwipycon2009</category><category>launchpad</category></item><item><title>Volker Kuhlmann - Rapid GUI application development with python</title><link>https://pyvideo.org/kiwi-pycon-2009/volker-kuhlmann---rapid-gui-application-developme.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Rapid GUI application development with Python&lt;/p&gt;
&lt;p&gt;Presented by Volker Kuhlmann&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Options and tools for rapid desktop GUI application development using
python are examined, and how they compare to competing languages and
platforms.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;Examine GUI options for python including Qt, and their performance with
respect to ease of use, runtime, and platform portability. Examine
options for the tool chain (IDE, editor, debugger, programming aids) and
characterise their ease of use and level of sophistication, and compare
with commonly used equivalents, both open source and not open source.
Demonstrate a sample program.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Volker Kuhlmann</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/volker-kuhlmann---rapid-gui-application-developme.html</guid><category>gui</category><category>kiwipycon</category><category>kiwipycon2009</category><category>qt</category></item><item><title>WenChen Hol - coursebuilder: reusable multimodal elearning resource editor</title><link>https://pyvideo.org/kiwi-pycon-2009/wenchen-hol---coursebuilder--reusable-multimodal-.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;coursebuilder: reusable multimodal elearning resource editor&lt;/p&gt;
&lt;p&gt;Presented by WenChen Hol&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;To showcase and explain the core technology of the coursebuilder tool.
It is a web technology that can help deliver the reuse of quality
learning and web designs and to facilitate putting extra teaching
information and community input inside context.&lt;/p&gt;
&lt;p&gt;Outline&lt;/p&gt;
&lt;p&gt;technology background demo what is the difference q&amp;amp;a;&lt;/p&gt;
&lt;p&gt;[VIDEO HAS ISSUES: Sound and video are poor. Slides are hard to read.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">WenChen Hol</dc:creator><pubDate>Sat, 07 Nov 2009 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2009-11-07:kiwi-pycon-2009/wenchen-hol---coursebuilder--reusable-multimodal-.html</guid><category>coursebuilder</category><category>kiwipycon</category><category>kiwipycon2009</category></item></channel></rss>