<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org - Drake Pocsatko</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_drake-pocsatko.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2023-12-16T00:00:00+00:00</updated><subtitle></subtitle><entry><title>Deploy a Python API to the Cloud, Fast!</title><link href="https://pyvideo.org/pyohio-2022/deploy-a-python-api-to-the-cloud-fast.html" rel="alternate"></link><published>2022-07-30T00:00:00+00:00</published><updated>2022-07-30T00:00:00+00:00</updated><author><name>Drake Pocsatko</name></author><id>tag:pyvideo.org,2022-07-30:/pyohio-2022/deploy-a-python-api-to-the-cloud-fast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;APIs are great and fun to develop, but how can you deploy and host one?
This talk will cover designing and deploying a simple Python REST API to
AWS using AWS Lambda and AWS API Gateway, using the AWS Serverless
Application Model as infrastructure as code to define the …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;APIs are great and fun to develop, but how can you deploy and host one?
This talk will cover designing and deploying a simple Python REST API to
AWS using AWS Lambda and AWS API Gateway, using the AWS Serverless
Application Model as infrastructure as code to define the API specs and
deploy all of the code. All with ZERO server interactions!&lt;/p&gt;
</content><category term="PyOhio 2022"></category></entry><entry><title>How to Test Your Cloud Code Confidently</title><link href="https://pyvideo.org/pyohio-2023/how-to-test-your-cloud-code-confidently.html" rel="alternate"></link><published>2023-12-16T00:00:00+00:00</published><updated>2023-12-16T00:00:00+00:00</updated><author><name>Drake Pocsatko</name></author><id>tag:pyvideo.org,2023-12-16:/pyohio-2023/how-to-test-your-cloud-code-confidently.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing cloud native Python is one of the easiest ways to build an
application for AWS. However, when it comes to running unit tests on
your code, how do you ensure that your API calls to other AWS services
don't actually change things? Thats where The Stubber comes in …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Writing cloud native Python is one of the easiest ways to build an
application for AWS. However, when it comes to running unit tests on
your code, how do you ensure that your API calls to other AWS services
don't actually change things? Thats where The Stubber comes in! A
lesser-known part of AWS's python SDK Boto3, The Stubber is a way to
mock your API calls and return exactly what AWS promises that you will
get when you invoke their APIs without actually invoking them. This talk
will cover why its important to unit test your Python AWS Lambdas, how
to use the Stubber, and a demo running unit tests with the Stubber.&lt;/p&gt;
</content><category term="PyOhio 2023"></category></entry></feed>