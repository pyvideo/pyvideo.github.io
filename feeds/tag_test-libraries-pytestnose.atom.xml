<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_test-libraries-pytestnose.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-07-11T00:00:00+00:00</updated><entry><title>Advanced pytest</title><link href="https://pyvideo.org/europython-2019/advanced-pytest.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Raphael Pierzina</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/advanced-pytest.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are many reasons why I think pytest is a fantastic test framework:
assertion introspection, setup and teardown with fixtures, parametrized
tests. But plugins are the real game changer!&lt;/p&gt;
&lt;p&gt;We'll dive right into customizing a test suite by developing a series of
pytest plugins based on a few neat hacks. We'll learn how to
automatically add markers to slow running tests, run only tests that use
a fixture which can be specified on the CLI, generate test reports in a
custom format, and automatically create GitHub issues for test
regressions. We'll wrap up this talk by using Cookiecutter to create
Python packages from our plugins that are ready to be published on PyPI.&lt;/p&gt;
</summary><category term="Test Libraries (pytest/nose/...)"></category><category term="Testing"></category><category term="python"></category></entry></feed>