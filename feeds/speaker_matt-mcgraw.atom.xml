<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_matt-mcgraw.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2016-11-13T00:00:00+00:00</updated><entry><title>Python -&gt; Iron Python -&gt; SQL Server</title><link href="https://pyvideo.org/pycon-ca-2016/python-iron-python-sql-server.html" rel="alternate"></link><published>2016-11-13T00:00:00+00:00</published><updated>2016-11-13T00:00:00+00:00</updated><author><name>Matt McGraw</name></author><id>tag:pyvideo.org,2016-11-13:pycon-ca-2016/python-iron-python-sql-server.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Working with Python in a Windows environment can present some unorthodox
challenges. In one such challenge we'll explore one solution for cases
when you want to communicate with a SQL Server database and cannot use
pyodbc. The solution demonstrates how to create a small library in Iron
Python which can take advantage of the .NET CLR that is responsible for
communicating with SQL Server.&lt;/p&gt;
&lt;div class="section" id="matt-mcgraw-bio"&gt;
&lt;h4&gt;Matt McGraw Bio&lt;/h4&gt;
&lt;p&gt;After five years of working in corporate finance and business
intelligence, Matt has shifted his career focus to software development.
The Python community has played a major role in supporting the
transition and now he uses Python to help build enterprise information
systems in the automotive industry.&lt;/p&gt;
&lt;/div&gt;
</summary></entry></feed>