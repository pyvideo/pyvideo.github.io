<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Sun, 29 Oct 2017 12:00:00 +0100</lastBuildDate><item><title>Tested and Correct, How to Make Sure Your Documentation Keeps Working</title><link>https://pyvideo.org/write-the-docs-europe-2015/tested-and-correct-how-to-make-sure-your-documentation-keeps-working.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Full talk description: &lt;a class="reference external" href="http://www.writethedocs.org/conf/eu/2015/speakers/"&gt;http://www.writethedocs.org/conf/eu/2015/speakers/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.writethedocs.org/conf/eu/2015/schedule/"&gt;http://www.writethedocs.org/conf/eu/2015/schedule/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Follow us on Twitter &amp;#64;writethedocs&lt;/p&gt;
&lt;p&gt;Join our mailing list &lt;a class="reference external" href="http://writethedocs.us11.list-manage.com/subscribe?u=fcfe905987123983cc93c7a46&amp;amp;id=e2e27d6167"&gt;http://writethedocs.us11.list-manage.com/subscribe?u=fcfe905987123983cc93c7a46&amp;amp;id=e2e27d6167&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Dangoor</dc:creator><pubDate>Mon, 31 Aug 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-08-31:write-the-docs-europe-2015/tested-and-correct-how-to-make-sure-your-documentation-keeps-working.html</guid></item><item><title>Verified fakes of web services by example</title><link>https://pyvideo.org/pycon-uk-2017/verified-fakes-of-web-services-by-example.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If your code calls a third party service then you may want to test that your code works but you don't want to call the service in your tests.&lt;/p&gt;
&lt;p&gt;It may be expensive, slow or impossible to call that service. For example, if you are making a Slack bot, you want to create tests which don't make calls across the network to Slack.&lt;/p&gt;
&lt;p&gt;One approach is to create a mock of that service. Our tests can now run quickly, cheaply and reliably. But if we copy the service incorrectly, or if the service changes, our tests will pass while our code does not work.&lt;/p&gt;
&lt;p&gt;Verified fakes solve this problem. You can write tests which confirm that your mock is an accurate representation of the service being mocked. Those tests can be a small subset of your test suite and they can be run periodically, to verify the validity of the many tests which use the mock.&lt;/p&gt;
&lt;p&gt;This talk will follow the example of VWS-Python, a verified fake for a proprietary web service. It will discuss the practicalities of creating such a fake and it will focus on the trade-offs, tooling, and approaches involved.&lt;/p&gt;
&lt;p&gt;By the end of this talk, the audience will understand how to tie together pytest, Travis CI, requests and Responses to create a verified fake.&lt;/p&gt;
&lt;p&gt;The talk is aimed at people who have an interest in writing correct software. It is assumed that the audience is familiar with basic testing techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Dangoor</dc:creator><pubDate>Sun, 29 Oct 2017 12:00:00 +0100</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-10-29:pycon-uk-2017/verified-fakes-of-web-services-by-example.html</guid></item><item><title>But how do you know your mock is valid? Verified fakes of web services</title><link>https://pyvideo.org/europython-2017/but-how-do-you-know-your-mock-is-valid-verified-fakes-of-web-services.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If your code calls a third party service then you may want to test
that your code works but you don't want to call the service in your tests.&lt;/p&gt;
&lt;p&gt;It may be expensive, slow or impossible to call that service.
For example, if you are making a Slack bot, you want to create tests
hich don't make calls across the network to Slack.&lt;/p&gt;
&lt;p&gt;One approach is to create a mock of that service. Our tests can now run
quickly, cheaply and reliably. But if we copy the service incorrectly,
or if the service changes, our tests will pass while our code does not work.&lt;/p&gt;
&lt;p&gt;Verified fakes solve this problem. You can write tests which confirm
that your mock is an accurate representation of the service being mocked.
Those tests can be a small subset of your test suite and they can be run
periodically, to verify the validity of the many tests which use the mock.&lt;/p&gt;
&lt;p&gt;This talk will follow the example of VWS-Python, a verified fake
for a proprietary web service. It will discuss the practicalities
of creating such a fake and it will focus on the trade-offs,
tooling and approaches involved.&lt;/p&gt;
&lt;p&gt;By the end of this talk the audience will understand how to tie together
pytest, Travis CI, requests and Responses to create a verified fake.&lt;/p&gt;
&lt;p&gt;The talk is aimed at people who have an interest in writing correct
software. It is assumed that the audience is familiar with basic testing techniques.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Dangoor</dc:creator><pubDate>Mon, 10 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-10:europython-2017/but-how-do-you-know-your-mock-is-valid-verified-fakes-of-web-services.html</guid></item><item><title>Another pair of eyes: Reviewing code well</title><link>https://pyvideo.org/europython-2016/another-pair-of-eyes-reviewing-code-well.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Adam Dangoor - Another pair of eyes: Reviewing code well
[EuroPython 2016]
[21 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/another-pair-of-eyes-reviewing-code-well"&gt;https://ep2016.europython.eu//conference/talks/another-pair-of-eyes-reviewing-code-well&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Many of us have been taught to code, but we know that software
engineering jobs are so much more than that.
Programmers can spend 5-6 hours per week on code review, but doing
that is almost ignored as a skill.
How many of us have seen poor reviews, which don't catch bugs, make
people feel bad or block important features being merged?
An introduction to what code review is alongside guidelines, tips,
tricks and anecdotes to help make your code reviews be as productive
as possible.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Many of us have been taught to code, but we know that software
engineering is so much more than that. Programmers can spend 5-6 hours
per week on code review, but doing that is almost ignored as a skill,
and instead it is often treated as a rote chore.&lt;/p&gt;
&lt;p&gt;How many of us have seen poor reviews - those which upset people,
don't catch bugs or block important features being merged? This talk
explores the social and technical impacts of various code review
practices as well as helpful tooling. The goal is to provide a
structure to help improve how teams review code, and to introduce the
costs and benefits of code review to anyone unfamiliar with the
practice.&lt;/p&gt;
&lt;p&gt;There are always trade-offs to be made - e.g. think how costly a
security flaw in this code could be to your organisation - perhaps
intense scrutiny is not necessary for prototypes soon to be thrown
away. It is useful to consider the  trade-offs in order to optimise
for a particular problem domain. Perhaps right now it is more
important to look for issues with maintainability, functionality or
performance.&lt;/p&gt;
&lt;p&gt;I talk about how some fantastic code reviews from mentors, colleagues
and strangers have helped me become a better programmer and team
member, as well as occasions where code review has been detrimental by
slowing things down and causing arguments.&lt;/p&gt;
&lt;p&gt;This is aimed at everyone from beginner to advanced programmers.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adam Dangoor</dc:creator><pubDate>Thu, 04 Aug 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2016-08-04:europython-2016/another-pair-of-eyes-reviewing-code-well.html</guid></item></channel></rss>