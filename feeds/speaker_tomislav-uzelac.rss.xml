<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Tue, 11 Jul 2017 00:00:00 +0000</lastBuildDate><item><title>Making Games with Python: Mission Impossible?</title><link>https://pyvideo.org/europython-2017/making-games-with-python-mission-impossible.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A discussion about making full-featured, commercial games in python,
both 2D and 3D.&lt;/p&gt;
&lt;p&gt;Looking at state of the art approaches to using python in gaming, we
will compare the alternatives: pygame (2D API), OpenGL (via
pygame/pySDL2), Unreal Engine 4 and the Godot Engine (with further
comparison to Unity 3D game engine).&lt;/p&gt;
&lt;p&gt;We will also look at other benefits of using python in the gaming
context, such as integration with 3D modelling software, scripting
the asset pipeline and GIS data integration.&lt;/p&gt;
&lt;p&gt;Finally, can (and should) python move beyond being the language of
plugins and scripts, and become the main language for creating game
development projects?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martin Christen</dc:creator><pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2017-07-11:europython-2017/making-games-with-python-mission-impossible.html</guid></item></channel></rss>