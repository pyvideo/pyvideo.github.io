<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org - PyWaw Summit 2015</title><link>https://pyvideo.org/</link><description></description><lastBuildDate>Mon, 02 Nov 2015 00:00:00 +0000</lastBuildDate><item><title>A Brief Introduction to Practical Robotics in Python</title><link>https://pyvideo.org/pywaw-summit-2015/a-brief-introduction-to-practical-robotics-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: A Brief Introduction to Practical Robotics in Python&lt;/p&gt;
&lt;p&gt;Very few of us would write our own web server from scratch using first principals. The python ecosystem has so many tools to make it fast and easy to create a fairly sophisticated web application. But what about if you want to build a robot? It turns out that one of the best robotics packages in the world has python hooks, and you can use it to do all sorts of awesome things. This talk will give a brief introduction to Robot Operating System and how to interface with it in python. In this talk we will cover the basics of ROS setup, package building, and robot software development. In particular we will look at how to interface with different bits of hardware, build up complex robot behaviors from that hardware, and then deploy the results.&lt;/p&gt;
&lt;p&gt;Speaker: Katherine Scott. Katherine Scott is a software engineer who specializes in computer vision and robotics applications. She holds undergraduate degrees in computer engineering and electrical engineering from the University of Michigan and a Master's degree in computer science from Columbia University. She is the co-founder and software lead at Tempo Automation a manufacturing robotics company.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://github.com/kscottz/PyCon2015Talk/blob/master/RobotsRobotsRARARA.ipynb"&gt;https://github.com/kscottz/PyCon2015Talk/blob/master/RobotsRobotsRARARA.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Katherine Scott</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/a-brief-introduction-to-practical-robotics-in-python.html</guid><category>PyWaw Summit 2015</category><category>Robotics (Industry)</category></item><item><title>Beyond the basics with Elasticsearch</title><link>https://pyvideo.org/pywaw-summit-2015/beyond-the-basics-with-elasticsearch.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Beyond the basics with Elasticsearch&lt;/p&gt;
&lt;p&gt;Since 2008 Honza has been building content web sites for fun and profit. During this time he discovered Elasticsearch which lead to him joining the company behind it in 2013 to work on the Python drivers. Elasticsearch has many use cases, some of them fairly obvious and widely used, like plain searching through documents or analytics. In this talk I would like to go through some of the more advanced scenarios we have seen in the wild. Some examples of what we will cover:If we end up with some time to spare we can explore some other ideas about how we can utilize the features of a search engine to drive non-trivial data analysis.&lt;/p&gt;
&lt;p&gt;Speaker: Honza Král. Honza is a Python programmer and Django core developer – since he is scared of the bright and shiny world of browsers, designers, and users he prefers to stay buried deep in the infrastructure code and just provides others with tools to do the actual site-building.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/elasticsearch/beyond-the-basics-with-elasticsearch"&gt;https://speakerdeck.com/elasticsearch/beyond-the-basics-with-elasticsearch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Honza Král</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/beyond-the-basics-with-elasticsearch.html</guid><category>PyWaw Summit 2015</category><category>Elasticsearch</category></item><item><title>Call Me Later</title><link>https://pyvideo.org/pywaw-summit-2015/call-me-later.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Call Me Later&lt;/p&gt;
&lt;p&gt;asyncio is the reason to switch to Python 3 now. There, I said it. Is this used in production at Facebook? It is. On how many machines? On all of them. Why? It makes concurrent code easier to read. Easier to test. Sometimes even faster to run.If the words &amp;quot;event loop&amp;quot;, &amp;quot;coroutine&amp;quot;, &amp;quot;yield from&amp;quot;, &amp;quot;executor&amp;quot; or &amp;quot;future&amp;quot; make you feel uneasy, come learn how beautiful and easy to understand it actually is at the core. No prior asyncore, Twisted or Node.js experience required.&lt;/p&gt;
&lt;p&gt;Speaker: Łukasz Langa. Python committer since 2010. Chronic perfectionist. Pianist. Dad. In his free time uses Python 3 to help Facebook maintain cache consistency.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://fb.me/call-me-later"&gt;http://fb.me/call-me-later&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Łukasz Langa</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/call-me-later.html</guid><category>PyWaw Summit 2015</category><category>asyncio</category></item><item><title>Designing Large-Scale Applications in Python</title><link>https://pyvideo.org/pywaw-summit-2015/designing-large-scale-applications-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Designing Large-Scale Applications in Python&lt;/p&gt;
&lt;p&gt;Concepts for designing large and scalable Python applications that work in practice. Python is often referred to as a scripting language. While Python is an ideal platform for scripting, integration or plugin tasks, it does in fact cover all the concepts needed for truly large-scale object oriented application development. However, complex applications bring new challenges. The talk draws on my experience with large-scale application design using Python as central implementation language and provides a cookbook approach to many of the problems you face when designing and organizing complex application frameworks. The approach has been used in many real-life projects, ranging from web application servers in varying fields of application to complete finance trading systems. Python has always proven to be a truly good choice with an outstanding time-to-market advantage over other implementation languages such as Java or C++. It allows small software development companies to successfully compete against multi-million dollar ventures.&lt;/p&gt;
&lt;p&gt;Speaker: Marc-André Lemburg. Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of Düsseldorf. His work with and for Python started in 1993/1994. He is a Python Core Developer, designed and implemented the Unicode support in Python 1.6, and author of the mx Extensions, e.g. mxTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com. Marc-Andre is a Python Software Foundation (PSF) Fellow and board member, an EuroPython Society (EPS) board member and co-founded a local Python meeting in Düsseldorf (PyDDF). More infos are available at &lt;a class="reference external" href="https://wiki.python.org/moin/MarcAndreLemburg"&gt;https://wiki.python.org/moin/MarcAndreLemburg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://downloads.egenix.com/python/PyWaw-Summit-2015-Large-Scale-Applications.pdf"&gt;https://downloads.egenix.com/python/PyWaw-Summit-2015-Large-Scale-Applications.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/designing-large-scale-applications-in-python.html</guid><category>PyWaw Summit 2015</category></item><item><title>Hoist Your I/O</title><link>https://pyvideo.org/pywaw-summit-2015/hoist-your-io.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Hoist Your I/O&lt;/p&gt;
&lt;p&gt;Our programs too often leave control decisions stranded in low-level routines, producing tightly coupled systems that make it difficult to re-use code. What are the warning signs of tightly coupled I/O and how can it be corrected? Particular attention will be paid to the way that modern Python syntax supports a broader array of solutions than were once possible!&lt;/p&gt;
&lt;p&gt;Speaker: Brandon Rhodes. Brandon is a programmer and instructor working at Dropbox, and is excited that this is his third chance to speak at a Python event in Poland.  For 17 years Brandon has maintained the most popular amateur astronomy library for Python, and will be the Chair of PyCon 2016–2017 in Portland, Oregon.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://rhodesmill.org/brandon/slides/2015-05-pywaw/hoist/"&gt;http://rhodesmill.org/brandon/slides/2015-05-pywaw/hoist/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/hoist-your-io.html</guid><category>PyWaw Summit 2015</category></item><item><title>Into the Rabbit Hole</title><link>https://pyvideo.org/pywaw-summit-2015/into-the-rabbit-hole.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Into the Rabbit Hole&lt;/p&gt;
&lt;p&gt;Django is awesome when it comes to speeding up a development process. The famous Django’s magic will let you develop quickly and easily. But there are times, when Django's magic is gone and you end up in a rabbit hole, chasing a rabbit instead of stoping as soon as possible and find your way out.The talk will be a case study of how one can end up in rabbit hole. We will see how easy it is to end up digging in Django Model Forms, instead of looking at the problem objectively.The talk goal is to start a discussion about techniques that help you realize that you are going in a wrong direction and you should go back one or two steps as soon as possible.&lt;/p&gt;
&lt;p&gt;Speaker: Ola Sendecka. Python &amp;amp; Django enthusiast and magic maker. Co-founder of Django Girls, Django Core developer and DSF member. Serial Django Girls coach and Django sprint organizer. Co-organizer of Django Con (Circus edition) in 2013.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/asendecka/into-the-rabbit-hole"&gt;https://speakerdeck.com/asendecka/into-the-rabbit-hole&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ola Sendecka</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/into-the-rabbit-hole.html</guid><category>PyWaw Summit 2015</category></item><item><title>Modern Deployments</title><link>https://pyvideo.org/pywaw-summit-2015/modern-deployments.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Modern Deployments&lt;/p&gt;
&lt;p&gt;Deploying your application is a critical part of your getting things done pipeline.Still, making your beautiful creation publicly available can become a messy process full of nightmares you -- or your infrastructure team -- wish were never there.Instead of fearing it, embrace early and often deployments, assisted by tools that help you develop and scale your apps. This talk is a demo of how to deploy Python-based web applications using the open-source PaaS OpenShift, that relies on cool modern technologies like Docker and Kubernetes.&lt;/p&gt;
&lt;p&gt;Speaker: Rodolfo Carvalho. Rodolfo is a long time Pythonista coming from Rio de Janeiro, Brazil. He founded the Coding Dojo Rio, a successful effort to share knowledge and build a community. His curiosity and avidity has taken him to visit several cities, and live in Lisbon, Beijing, Cracow and now Brno. He currently works on OpenShift, the open-source PaaS from Red Hat.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/rhcarvalho/python-deployments-on-openshift-3"&gt;http://www.slideshare.net/rhcarvalho/python-deployments-on-openshift-3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Rodolfo Carvalho</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/modern-deployments.html</guid><category>PyWaw Summit 2015</category><category>Deployment</category><category>DevOps</category></item><item><title>Monolithic app to microservices transition is easy</title><link>https://pyvideo.org/pywaw-summit-2015/monolithic-app-to-microservices-transition-is-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Monolithic app to microservices transition is easy...&lt;/p&gt;
&lt;p&gt;Microservices architecture is trendy right now ;) It's often a good choice for building sophisticated applications but on the other hand you have to be aware about difficulties with this architecture. What do you need to remember about if you have monolithic app right now and want to move into microservices world? I would like to summarize what I've learned about this transition process recently. This presentation will shortly cover main issues you will have to solve during transition process and how Python can help here:This talk will be of greatest interest to everybody feeling responsible for architecture of Python systems they are working on.&lt;/p&gt;
&lt;p&gt;Speaker: Tomasz Choduń. Experienced software developer and software architect. Was working with few startups (some of them successful;)) and quite big companies. Loves clean, readable code and nice software design.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://www.slideshare.net/TomaszChodu/pywaw-summit2015tomaszchodun-48752792"&gt;http://www.slideshare.net/TomaszChodu/pywaw-summit2015tomaszchodun-48752792&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Tomasz Choduń</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/monolithic-app-to-microservices-transition-is-easy.html</guid><category>PyWaw Summit 2015</category></item><item><title>On snakes and elephants</title><link>https://pyvideo.org/pywaw-summit-2015/on-snakes-and-elephants.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: On snakes and elephants&lt;/p&gt;
&lt;p&gt;Everyone knows you can connect to PostgreSQL from Python, but not everyone knows you can actually make the PostgreSQL server process execute Python code in an embedded interpreter.PL/Python is a stored procedure language for PostgreSQL, allowing extending Postgres with Python.The use cases are limitless, from moving your business logic into the database, to doing number crunching inside the database server process without having to ship raw data to external worker nodes.We'll talk about how would you write an embedded Python procedure inside Postgres, what functionality it offers and what are the quirks and challenges posed by running a Python interpreter inside a database server process.&lt;/p&gt;
&lt;p&gt;Speaker: Jan Urbański. I've been using Python profesionally since 2009. I'm a developer and an Open Source contributor for a number of projects. I added some features to Postgres embedded Python bindings, maintain an asynchronous Postgres driver for Twisted called txpostgres and wrote a Twisted connector for Pika (a Python AMQP library). Currently, I work as Lead Developer for New Relic, an Application Performance Monitoring company, after they acquired a startup I founded earlier.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://wulczer.org/pywaw-summit.pdf"&gt;https://wulczer.org/pywaw-summit.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Jan Urbański</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/on-snakes-and-elephants.html</guid><category>PyWaw Summit 2015</category></item><item><title>Queueing tasks with rq</title><link>https://pyvideo.org/pywaw-summit-2015/queueing-tasks-with-rq.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Queueing tasks with rq&lt;/p&gt;
&lt;p&gt;Do you need a simple queueing system to communicate between various python processes? Then RQ might be a solution for you. I will show you how to set up your tasks in RQ and how to solve some common problems with this technology.&lt;/p&gt;
&lt;p&gt;Speaker: Szymon Pyżalski. Born 1982. Programming for life since 2009. In python since 2011. Currently member of the ralph team in Allegro Group.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://github.com/zefciu/rq-pywaw"&gt;https://github.com/zefciu/rq-pywaw&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Szymon Pyżalski</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/queueing-tasks-with-rq.html</guid><category>PyWaw Summit 2015</category></item><item><title>Real-time web apps with (just) Python and Postgres</title><link>https://pyvideo.org/pywaw-summit-2015/real-time-web-apps-with-just-python-and-postgres.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Real-time web apps with (just) Python and Postgres&lt;/p&gt;
&lt;p&gt;The design and documentation of the leading Python web frameworks are heavily focused on building web sites, with HTML content rendered on the server, and require significant effort to support modern web apps that use RESTful APIs, real-time updates over websockets, and Javascript-based user interfaces.If we start with a clean slate and design a framework around the needs of a real-time single-page-application, several things become apparent:Using the well-known TodoMVC application as an example, this presentation will give a tour of a simple Python backend that provides live syncing between browsers using just Python, Postgres, and a Werkzeug based micro framework that integrates REST endpoints and websockets into a single, coherent API.Though approachable to beginners, this talk will be of greatest interest to intermediate-level Python programmers who have used Django in the past and wondered how to move on to something more modern, but not more complicated.&lt;/p&gt;
&lt;p&gt;Speaker: Brent Tubbs. Brent Tubbs is the Deputy Technical Director at YouGov, an online market research and political polling firm. He is the primary author of Velociraptor, an open source platform-as-a-service for deploying Heroku-compatible applications, and of Mettle, a data pipeline framework being open sourced at the PyWaw conference.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://btubbs.com/documents/RealTimeWebApps.pdf"&gt;http://btubbs.com/documents/RealTimeWebApps.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brent Tubbs</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/real-time-web-apps-with-just-python-and-postgres.html</guid><category>PyWaw Summit 2015</category></item><item><title>Shipping Python to customers</title><link>https://pyvideo.org/pywaw-summit-2015/shipping-python-to-customers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Shipping Python to customers&lt;/p&gt;
&lt;p&gt;Shipping your Python-based product to your customers can be challenging, especially if you want the install process to be easy yet bullet-proof.I'd like to review tools and methods you can use to package and deploy Python code at customers' premises, taking into account that they run on outdated systems, have no or limited Internet connectivity and the project sponsor may want obfuscate the source-code.&lt;/p&gt;
&lt;p&gt;Speaker: Marcin Gozdalik. Programmer, agile practitioner. Currently working on Python-based product to efficiently index collections of billions of files.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://www.dropbox.com/s/ndzuli4tdds18xc/Shipping%20Python.pdf"&gt;https://www.dropbox.com/s/ndzuli4tdds18xc/Shipping%20Python.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marcin Gozdalik</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/shipping-python-to-customers.html</guid><category>PyWaw Summit 2015</category></item><item><title>Single Responsibility Principle</title><link>https://pyvideo.org/pywaw-summit-2015/single-responsibility-principle.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Single Responsibility Principle&lt;/p&gt;
&lt;p&gt;How to write clean, reusable, maintainable and testable Python code following the Single Responsibility Principle.What is &amp;quot;single&amp;quot;, why is it so important, how to determine whether your code follows the SRP and how to refactor it.&lt;/p&gt;
&lt;p&gt;Speaker: Ignacy Sokołowski. I am a Python Developer at Webinterpret. I love simplicity, clean code, fast unit tests and good documentation.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://ignacysokolowski.github.io/single-responsibility-principle-talk/"&gt;http://ignacysokolowski.github.io/single-responsibility-principle-talk/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ignacy Sokołowski</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/single-responsibility-principle.html</guid><category>PyWaw Summit 2015</category><category>SRP</category></item><item><title>Small Data: Storage for the rest of us</title><link>https://pyvideo.org/pywaw-summit-2015/small-data-storage-for-the-rest-of-us.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Small Data: Storage for the rest of us&lt;/p&gt;
&lt;p&gt;Everybody's always talking about Big Data, and aspiring to be the company that can expend whole datacentres just to handle their latest feature, but that has a massive engineering and ops cost - and as a small-to-medium company, that's probably not what you need.Learn about data storage patterns that are designed for the rest of us - how you can design data storage not just for scalability but also for rapid development, continuous deployment, and lower hardware requirements. Plus, a look at how to approach some more extreme storage challenges.&lt;/p&gt;
&lt;p&gt;Speaker: Andrew Godwin. Andrew is a Django core developer and backend engineer, specialising in system architecture and data storage. He currently works on Eventbrite's Architecture team, helping to scale Eventbrite to handle an ever-growing number of events and users. In his spare time, he also enjoys archery, flying light aircraft, mountains, and cheese.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/andrewgodwin/small-data-storage-for-the-rest-of-us"&gt;https://speakerdeck.com/andrewgodwin/small-data-storage-for-the-rest-of-us&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Andrew Godwin</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/small-data-storage-for-the-rest-of-us.html</guid><category>PyWaw Summit 2015</category></item><item><title>Snakes, ponies and balloons</title><link>https://pyvideo.org/pywaw-summit-2015/snakes-ponies-and-balloons.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Snakes, ponies and balloons: stories of teaching Python to thousands of women.&lt;/p&gt;
&lt;p&gt;Django Girls is a workshop for total beginners into the world of web building. Started by two Polish girls in Berlin and now organized all over the world in 45 cities, Django Girls aim to inspire women to fall in love with programming. Ola will share with you how she went from not knowing anything about teaching programming or feminism, to knowing a little bit more thanks to thousands of people who participated in the workshop formula Django Girls created. You'll learn the secrets of explaining the Internet, servers or ORM to people who never done this before. And how to find 100+ women who want to learn to code just about anywhere. This talk is your introduction to the world of getting girls excited about snakes, ponies and balloons.&lt;/p&gt;
&lt;p&gt;Speaker: Ola Sitarska. Ola Sitarska is a Django Developer at Potato. She started working with Django 6 years ago, when she discovered the power of Django admin and quickly fell in love with the beauty of Python. Last year, Ola started Django Girls, an initiative to inspire more women to become programmers. Together with Ola Sendecka, she also co-authored the Django Girls Tutorial, which has been visited by more than 30.000 people so far. She is also a member of the Django Team and was responsible for the shipping djangoproject.com redesign. In 2015, she became a Django Software Foundation board member. Ola is also known as A Person With The Django Circus Idea™. She thinks her superpower is the unstoppable enthusiasm.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://speakerdeck.com/olasitarska/django-girls-stories-of-teaching-python-and-django-to-thousands-of-women"&gt;https://speakerdeck.com/olasitarska/django-girls-stories-of-teaching-python-and-django-to-thousands-of-women&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Ola Sitarska</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/snakes-ponies-and-balloons.html</guid><category>PyWaw Summit 2015</category></item><item><title>Software Defined Networking in Python</title><link>https://pyvideo.org/pywaw-summit-2015/software-defined-networking-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Software Defined Networking in Python&lt;/p&gt;
&lt;p&gt;Software Defined Networking (SDN) is currently a strong trend in telecommunications, strongly linked with virtualization. It allows splitting Control Plane from Data Plane. We will go through some theory and industry background. Then most popular SDN protocol - OpenFlow - will be introduced. We will see how to use it with Python frameworks such as POX.Experience with SDN will be useful for work in Telco networks as well as data centers. Basic knowledge of Python and Ethernet/IP networking is required.&lt;/p&gt;
&lt;p&gt;Speaker: Konrad Gawda. Telecommunications specialist, graduated Warsaw University of Technology. Working with lab evaluation of new technologies and preparing prototypes of innovative telco solutions. Also - Python programmer and hobby electronics developer.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://docs.google.com/presentation/d/1RYUK74DXm7PP6D6cJM8B8xwXIbj2adn7auhwwLOsH9o/edit?usp=sharing"&gt;https://docs.google.com/presentation/d/1RYUK74DXm7PP6D6cJM8B8xwXIbj2adn7auhwwLOsH9o/edit?usp=sharing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Konrad Gawda</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/software-defined-networking-in-python.html</guid><category>PyWaw Summit 2015</category></item><item><title>Stopping to Sharpen Your Tools</title><link>https://pyvideo.org/pywaw-summit-2015/stopping-to-sharpen-your-tools.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Stopping to Sharpen Your Tools (Keynote)&lt;/p&gt;
&lt;p&gt;Speaker: Brandon Rhodes. Brandon is a programmer and instructor working at Dropbox, and is excited that this is his third chance to speak at a Python event in Poland.  For 17 years Brandon has maintained the most popular amateur astronomy library for Python, and will be the Chair of PyCon 2016–2017 in Portland, Oregon.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://rhodesmill.org/brandon/slides/2015-05-pywaw/keynote/"&gt;http://rhodesmill.org/brandon/slides/2015-05-pywaw/keynote/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Brandon Rhodes</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/stopping-to-sharpen-your-tools.html</guid><category>PyWaw Summit 2015</category></item><item><title>Stories about decentralization and diversity</title><link>https://pyvideo.org/pywaw-summit-2015/stories-about-decentralization-and-diversity.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Stories about decentralization and diversity&lt;/p&gt;
&lt;p&gt;Since my keynote at EP2013 about “the return of P2P computing” i’ve been to many meet ups and discussions to “redecentralize” the web. I’d like to summarize and highlight what i’ve learned about the topic on technical, economic and philosophical levels since my talk in Florence. What is technically hard about building distributed systems without a controlling center?  What is attractive and to be liked about centralization, actually?  How is &amp;quot;normative&amp;quot; thinking regarding gender or race related?  Last but not least i’ll focus on what role Python does and could play in existing “redencentralization” projects.&lt;/p&gt;
&lt;p&gt;Speaker: Holger Krekel. Holger Krekel is active in the Python community since 2002. He has given numerous talks including a keynote at EP2013 on &amp;quot;the return of P2P computing&amp;quot; and many trainings on automated testing and packaging. He is a co-founder of the PyPy project and maintains many well-known tools such as tox, pytest and devpi in the Python tooling landscape. His recent technical interests include the building of decentralized and crypto systems and working as a journalist from time to time.&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Holger Krekel</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/stories-about-decentralization-and-diversity.html</guid><category>PyWaw Summit 2015</category><category>Decentralization</category><category>Diversity</category></item><item><title>The Python Community - Present, Past and Future</title><link>https://pyvideo.org/pywaw-summit-2015/the-python-community-present-past-and-future.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: The Python Community - Present, Past and Future&lt;/p&gt;
&lt;p&gt;In this keynote, I will take the audience on a tour through the development of the Python community. Starting 20 years ago, looking at important milestones, showing current developments and giving an outlook of where we might be heading in the next few years. Hope you'll enjoy the ride.&lt;/p&gt;
&lt;p&gt;Speaker: Marc-André Lemburg. Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of Düsseldorf. His work with and for Python started in 1993/1994. He is a Python Core Developer, designed and implemented the Unicode support in Python 1.6, and author of the mx Extensions, e.g. mxTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com. Marc-Andre is a Python Software Foundation (PSF) Fellow and board member, an EuroPython Society (EPS) board member and co-founded a local Python meeting in Düsseldorf (PyDDF). More infos are available at &lt;a class="reference external" href="https://wiki.python.org/moin/MarcAndreLemburg"&gt;https://wiki.python.org/moin/MarcAndreLemburg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://downloads.egenix.com/python/PyWaw-Summit-2015-Python-Community-Keynote.pdf"&gt;https://downloads.egenix.com/python/PyWaw-Summit-2015-Python-Community-Keynote.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marc-André Lemburg</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:pyvideo.org,2015-11-02:/pywaw-summit-2015/the-python-community-present-past-and-future.html</guid><category>PyWaw Summit 2015</category><category>Community</category></item></channel></rss>