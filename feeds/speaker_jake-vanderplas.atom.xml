<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_jake-vanderplas.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-05-05T14:30:00+00:00</updated><entry><title>How to Think about Data Visualization</title><link href="https://pyvideo.org/pycon-us-2019/how-to-think-about-data-visualization.html" rel="alternate"></link><published>2019-05-05T14:30:00+00:00</published><updated>2019-05-05T14:30:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2019-05-05:pycon-us-2019/how-to-think-about-data-visualization.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The Python world has a staggering array of data visualization tools, and
choosing which to use can seem like a daunting task. But which tool you
use is far less important than how you use it. In this talk I’ll walk
through some of the important considerations involved in visualizing
your data, so that you can create more effective visualizations no
matter which plotting package you use.&lt;/p&gt;
</summary><category term="talk"></category></entry><entry><title>Performance Python: Seven Strategies for Optimizing Your Numerical Code</title><link href="https://pyvideo.org/pycon-us-2018/performance-python-seven-strategies-for-optimizing-your-numerical-code.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2018-05-11:pycon-us-2018/performance-python-seven-strategies-for-optimizing-your-numerical-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python provides a powerful platform for working with data, but often the most straightforward data analysis can be painfully slow. When used effectively, though, Python can be as fast as even compiled languages like C. This talk presents an overview of how to effectively approach optimization of numerical code in Python, touching on tools like numpy, pandas, scipy, cython, numba, and more.&lt;/p&gt;
</summary></entry><entry><title>Exploratory Data Visualization with Vega, Vega-Lite, and Altair</title><link href="https://pyvideo.org/pycon-us-2018/exploratory-data-visualization-with-vega-vega-lite-and-altair.html" rel="alternate"></link><published>2018-05-10T00:00:00+00:00</published><updated>2018-05-10T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2018-05-10:pycon-us-2018/exploratory-data-visualization-with-vega-vega-lite-and-altair.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Exploring a new dataset visually can provide quick intuition into the
relationships within the data. There are a few well-developed
visualization packages in Python, but they often have very imperative
APIs that force the user to focus on the mechanics of the visualization
– tick locations, axis limits, legends, etc. – rather than the salient
relationships within the data.&lt;/p&gt;
&lt;p&gt;This tutorial will introduce data visualization with &lt;a class="reference external" href="http://altair-viz.github.io"&gt;Altair&lt;/a&gt;, a
package designed for exploratory visualization in Python that features a
declarative API, allowing data scientists to focus more on the data than
the incidental details. Altair is based on the &lt;a class="reference external" href="https://vega.github.io/"&gt;Vega&lt;/a&gt; and &lt;a class="reference external" href="https://vega.github.io/vega-lite/"&gt;Vega-Lite&lt;/a&gt;
visualization grammars, and thus automatically incorporates best
practices drawn from recent research in effective data visualization.&lt;/p&gt;
&lt;p&gt;The tutorial will provide an introduction to the Altair package and its
API, but more importantly will dive into the core concepts of effective
data visualization that can be applied using any visualization package
or tool.&lt;/p&gt;
</summary><category term="vega"></category><category term="vega-lite"></category><category term="altair"></category></entry><entry><title>Pydata 101</title><link href="https://pyvideo.org/pydata-seattle-2017/pydata-101.html" rel="alternate"></link><published>2017-07-06T00:00:00+00:00</published><updated>2017-07-06T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2017-07-06:pydata-seattle-2017/pydata-101.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The PyData ecosystem is vast and powerful, but it can be overwhelming to newcomers. In this talk I outline some of the history of &lt;em&gt;why&lt;/em&gt; the Python data science space is the way it is, as well as &lt;em&gt;what&lt;/em&gt; tools and techniques you should focus on to get started for your own problems.&lt;/p&gt;
</summary><category term="keynote"></category></entry><entry><title>Scientific Analysis at Scale - a Comparison of Five Systems</title><link href="https://pyvideo.org/scipy-2017/scientific-analysis-at-scale-a-comparison-of-five-systems.html" rel="alternate"></link><published>2017-07-14T00:00:00+00:00</published><updated>2017-07-14T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2017-07-14:scipy-2017/scientific-analysis-at-scale-a-comparison-of-five-systems.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific discoveries are increasingly driven by the analysis of large volumes of image data, and many tools and systems have emerged to support distributed data storage and scalable computation. It is not always immediately clear, however, how well these systems support real-world scientific use cases. Our team set out to evaluate the performance and ease-of-use of five such systems (SciDB, Myria, Spark, Dask, and TensorFlow), as applied to real-world image analysis pipelines drawn from astronomy and neuroscience. We find that each tool has distinct advantages and shortcomings, which point the way to new research opportunities in making large-scale scientific image analysis both efficient and easy to use.&lt;/p&gt;
</summary></entry><entry><title>The Python Visualization Landscape</title><link href="https://pyvideo.org/pycon-us-2017/the-python-visualization-landscape.html" rel="alternate"></link><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2017-05-20:pycon-us-2017/the-python-visualization-landscape.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;So you want to visualize some data in Python: which library do you
choose? From Matplotlib to Seaborn to Bokeh to Plotly, Python has a
range of mature tools to create beautiful visualizations, each with
their own strengths and weaknesses. In this talk I’ll give an overview
of the landscape of dataviz tools in Python, as well as some deeper
dives into a few, so that you can intelligently choose which library to
turn to for any given visualization task.&lt;/p&gt;
</summary></entry><entry><title>Keynote: The Unexpected Effectiveness of Python in Science</title><link href="https://pyvideo.org/pycon-us-2017/keynote-the-unexpected-effectiveness-of-python-in-science.html" rel="alternate"></link><published>2017-05-19T00:00:00+00:00</published><updated>2017-05-19T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2017-05-19:pycon-us-2017/keynote-the-unexpected-effectiveness-of-python-in-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Friday morning keynote by Jake Vanderplas.&lt;/p&gt;
</summary></entry><entry><title>University of Washington eScience Institute</title><link href="https://pyvideo.org/pydata-seattle-2015/university-of-washington-escience-institute.html" rel="alternate"></link><published>2015-07-25T00:00:00+00:00</published><updated>2015-07-25T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2015-07-25:pydata-seattle-2015/university-of-washington-escience-institute.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sponsor Talk- University of Washington eScience Institute&lt;/p&gt;
&lt;p&gt;Slides available here:  &lt;a class="reference external" href="https://speakerdeck.com/jakevdp/the-escience-institute-data-science-at-uw"&gt;https://speakerdeck.com/jakevdp/the-escience-institute-data-science-at-uw&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Machine Learning with Scikit Learn</title><link href="https://pyvideo.org/pydata-seattle-2015/machine-learning-with-scikit-learn.html" rel="alternate"></link><published>2015-07-24T00:00:00+00:00</published><updated>2015-07-24T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2015-07-24:pydata-seattle-2015/machine-learning-with-scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will offer an introduction to the core concepts of machine learning and the Scikit-Learn package. We will introduce the scikit-learn API, and use it to explore the basic categories of machine learning problems and related topics such as feature selection and model validation, and practice applying these tools to real-world data sets.&lt;/p&gt;
&lt;p&gt;Machine learning is the branch of computer science concerned with the development of algorithms which can be trained by previously-seen data in order to make predictions about future data. It has become an important aspect of work in a variety of applications: from optimization of web searches, to financial forecasts, to studies of the nature of the Universe.&lt;/p&gt;
&lt;p&gt;This tutorial will explore machine learning with a hands-on introduction to the scikit-learn package. Beginning from the broad categories of supervised and unsupervised learning problems, we will dive into the fundamental areas of classification, regression, clustering, and dimensionality reduction. In each section, we will introduce aspects of the Scikit-learn API and explore practical examples of some of the most popular and useful methods from the machine learning literature.&lt;/p&gt;
&lt;p&gt;The strengths of scikit-learn lie in its uniform and well-document interface, and its efficient implementations of a large number of the most important machine learning algorithms. Those present at this tutorial will gain a basic practical background in machine learning and the use of scikit-learn, and will be well poised to begin applying these tools in many areas, whether for work, for research, for Kaggle-style competitions, or for their own pet projects.&lt;/p&gt;
&lt;p&gt;Slides available here: &lt;a class="reference external" href="https://github.com/jakevdp/sklearn_pydata2015"&gt;https://github.com/jakevdp/sklearn_pydata2015&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>Keynote: State of the Tools</title><link href="https://pyvideo.org/scipy-2015/keynote-state-of-the-tools.html" rel="alternate"></link><published>2015-07-10T00:00:00+00:00</published><updated>2015-07-10T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2015-07-10:scipy-2015/keynote-state-of-the-tools.html</id><summary type="html"></summary></entry><entry><title>Statistics for Hackers</title><link href="https://pyvideo.org/pycon-us-2016/jake-vanderplas-statistics-for-hackers-pycon-2016mp4.html" rel="alternate"></link><published>2016-06-17T00:00:00+00:00</published><updated>2016-06-17T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2016-06-17:pycon-us-2016/jake-vanderplas-statistics-for-hackers-pycon-2016mp4.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Jake Vanderplas&lt;/p&gt;
&lt;p&gt;Statistics has the reputation of being difficult to understand, but using some simple Python skills it can be made much more intuitive. This talk will cover several sampling-based approaches to solving statistical problems, and show you that if you can write a for-loop, you can do statistics.&lt;/p&gt;
&lt;p&gt;Slides can be found at: &lt;a class="reference external" href="https://speakerdeck.com/pycon2016"&gt;https://speakerdeck.com/pycon2016&lt;/a&gt; and &lt;a class="reference external" href="https://github.com/PyCon/2016-slides"&gt;https://github.com/PyCon/2016-slides&lt;/a&gt;&lt;/p&gt;
</summary></entry><entry><title>AstroML: data mining and machine learning for Astronomy</title><link href="https://pyvideo.org/scipy-2012/astroml-data-mining-and-machine-learning-for-ast.html" rel="alternate"></link><published>2012-07-18T00:00:00+00:00</published><updated>2012-07-18T00:00:00+00:00</updated><author><name>Alex Gray</name></author><id>tag:pyvideo.org,2012-07-18:scipy-2012/astroml-data-mining-and-machine-learning-for-ast.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is currently being adopted as the language of choice by many
astronomical researchers. A prominent example is in the Large Synoptic
Survey Telescope (LSST), a project which will repeatedly observe the
southern sky 1000 times over the course of 10 years. The 30,000 GB of
raw data created each night will pass through a processing pipeline
consisting of C++ and legacy code, stitched together with a python
interface. This example underscores the need for astronomers to be
well-versed in large-scale statistical analysis techniques in python. We
seek to address this need with the AstroML package, which is designed to
be a repository for well-tested data mining and machine learning
routines, with a focus on applications in astronomy and astrophysics. It
will be released in late 2012 with an associated graduate-level
textbook, 'Statistics, Data Mining and Machine Learning in Astronomy'
(Princeton University Press). AstroML leverages many computational tools
already available available in the python universe, including numpy,
scipy, scikit- learn, pymc, healpy, and others, and adds efficient
implementations of several routines more specific to astronomy. A main
feature of the package is the extensive set of practical examples of
astronomical data analysis, all written in python. In this talk, we will
explore the statistical analysis of several interesting astrophysical
datasets using python and astroML.&lt;/p&gt;
</summary><category term="Astronomy Mini-Symposia"></category></entry><entry><title>Lightning Talks - Wednesday</title><link href="https://pyvideo.org/scipy-2012/lightning-talks-wednesday.html" rel="alternate"></link><published>2012-07-18T00:00:00+00:00</published><updated>2012-07-18T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2012-07-18:scipy-2012/lightning-talks-wednesday.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;ol class="arabic simple"&gt;
&lt;li&gt;SciPy Sparse Graphs, Jake Vanderplas.&lt;/li&gt;
&lt;li&gt;Animation for Traits and Chaco, Corran Webster.&lt;/li&gt;
&lt;li&gt;Pynthantics, Jon Roland.&lt;/li&gt;
&lt;li&gt;State of the Numba, Jon Riehl.&lt;/li&gt;
&lt;li&gt;Pipe-o-matic call, Walker Hale.&lt;/li&gt;
&lt;li&gt;A Command ND-Array, Frédéric Bastien.&lt;/li&gt;
&lt;/ol&gt;
</summary><category term="lightning talks"></category><category term="Plenary"></category></entry><entry><title>scikit-learn</title><link href="https://pyvideo.org/scipy-2012/scikit-learn.html" rel="alternate"></link><published>2012-07-16T00:00:00+00:00</published><updated>2012-07-16T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2012-07-16:scipy-2012/scikit-learn.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Machine Learning has been getting a lot of buzz lately, and many
software libraries have been created which implement these routines.
scikit-learn is a python package built on numpy and scipy which
implements a wide variety of machine learning algorithms, useful for
everything from facial recognition to optical character recognition to
automated classification of astronomical images. This tutorial will
begin with a crash course in machine learning and introduce participants
to several of the most common learning techniques for classification,
regression, and visualization. Building on this background, we will
explore several applications of these techniques to scientific data --
in particular, galaxy, star, and quasar data from the Sloan Digital Sky
Survey -- and learn some basic astrophysics along the way. From these
examples, tutorial participants will gain knowledge and experience
needed to successfully solve a variety of machine learning and
statistical data mining problems with python.&lt;/p&gt;
</summary><category term="advanced"></category></entry><entry><title>Frequentism and Bayesianism: What's the Big Deal?</title><link href="https://pyvideo.org/scipy-2014/frequentism-and-bayesianism-whats-the-big-deal.html" rel="alternate"></link><published>2014-07-09T00:00:00+00:00</published><updated>2014-07-09T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2014-07-09:scipy-2014/frequentism-and-bayesianism-whats-the-big-deal.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;Statistical analysis comes in two main flavors: frequentist and
Bayesian. The subtle differences between the two can lead to widely
divergent approaches to common data analysis tasks. After a brief
discussion of the philosophical distinctions between the views, I’ll
utilize well-known Python libraries to demonstrate how this philosophy
affects practical approaches to several common analysis tasks.&lt;/p&gt;
&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In scientific data mining and machine learning, a fundamental division
is that of the frequentist and Bayesian approaches to statistics. Often
the fodder for impassioned debate among statisticians and other
practitioners, the subtle philosophical differences between the two
camps can lead to surprisingly different practical approaches to the
analysis of scientific data.&lt;/p&gt;
&lt;p&gt;In this talk I will delve into both the philosophical and practical
aspects of Bayesian and frequentist approaches, drawing from a &lt;a class="reference external" href="http://jakevdp.github.io/blog/2014/03/11/frequentism-and-bayesianism-a-practical-intro/"&gt;series
of
posts&lt;/a&gt;
from my blog.&lt;/p&gt;
&lt;p&gt;I'll start by addressing the philosophical differences between
frequentism and Bayesianism, which boil down to different definitions of
probability. I'll next move briefly into the mathematical details behind
the two approaches, at a level which will be informative to a general
scientific audience. I'll then show some examples of the two approaches
applied to some increasingly more complicated problems using standard
Python packages, namely: &lt;a class="reference external" href="http://numpy.org"&gt;NumPy&lt;/a&gt;,
&lt;a class="reference external" href="http://scipy.org"&gt;SciPy&lt;/a&gt;, &lt;a class="reference external" href="http://matplotlib.org"&gt;Matplotlib&lt;/a&gt;,
and &lt;a class="reference external" href="http://dan.iel.fm/emcee/"&gt;emcee&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this combination of philosophy and practical examples, the audience
should walk away with a much better understanding of the differences
between frequentist and Bayesian approaches to statistical analysis, and
especially how the philosophy of each approach affects the practical
aspects of computation in data-intensive scientific research.&lt;/p&gt;
</summary><category term="statistics"></category></entry><entry><title>An Introduction to scikit-learn: Machine Learning in Python</title><link href="https://pyvideo.org/pycon-us-2013/an-introduction-to-scikit-learn-machine-learning.html" rel="alternate"></link><published>2013-03-14T00:00:00+00:00</published><updated>2013-03-14T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2013-03-14:pycon-us-2013/an-introduction-to-scikit-learn-machine-learning.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will offer an introduction to the scikit-learn package and
to the central concepts of Machine Learning. We will introduce the basic
categories of learning problems, and explore practical examples based on
real-world data, from handwriting analysis to facial recognition to
automated classification of astronomical images.&lt;/p&gt;
</summary><category term="tutorial"></category></entry><entry><title>Diving deeper into Machine Learning with Scikit-learn</title><link href="https://pyvideo.org/pycon-us-2014/diving-deeper-into-machine-learning-with-scikit-l.html" rel="alternate"></link><published>2014-04-11T00:00:00+00:00</published><updated>2014-04-11T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2014-04-11:pycon-us-2014/diving-deeper-into-machine-learning-with-scikit-l.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial session is an hands-on workshop on applied Machine
Learning with the scikit-learn library. We will dive deeper into
scikit-learn model evaluation and automated parameter tuning. We will
also study how to scale text classification models for sentiment
analysis or spam detection and use IPython.parallel to leverage
multi-CPU or ad-hoc cloud clusters.&lt;/p&gt;
</summary></entry><entry><title>Exploring Machine Learning with Scikit-learn</title><link href="https://pyvideo.org/pycon-us-2014/exploring-machine-learning-with-scikit-learn.html" rel="alternate"></link><published>2014-04-11T00:00:00+00:00</published><updated>2014-04-11T00:00:00+00:00</updated><author><name>Jake Vanderplas</name></author><id>tag:pyvideo.org,2014-04-11:pycon-us-2014/exploring-machine-learning-with-scikit-learn.html</id><summary type="html">&lt;h3&gt;Summary&lt;/h3&gt;&lt;p&gt;This tutorial will offer an introduction to the core concepts of machine
learning, and how they can be easily applied in Python using
Scikit-learn. We will use the scikit-learn API to introduce and explore
the basic categories of machine learning problems, related topics such
as feature selection and model validation, and the application of these
tools to real-world data sets.&lt;/p&gt;
</summary></entry><entry><title>Losing your Loops Fast Numerical Computing with NumPy</title><link href="https://pyvideo.org/pycon-us-2015/losing-your-loops-fast-numerical-computing-with-n.html" rel="alternate"></link><published>2015-04-11T00:00:00+00:00</published><updated>2015-04-11T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2015-04-11:pycon-us-2015/losing-your-loops-fast-numerical-computing-with-n.html</id><summary type="html"></summary></entry><entry><title>Machine Learning with Scikit-Learn (I)</title><link href="https://pyvideo.org/pycon-us-2015/machine-learning-with-scikit-learn-i.html" rel="alternate"></link><published>2015-04-09T00:00:00+00:00</published><updated>2015-04-09T00:00:00+00:00</updated><author><name>Jake VanderPlas</name></author><id>tag:pyvideo.org,2015-04-09:pycon-us-2015/machine-learning-with-scikit-learn-i.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This tutorial will offer an introduction to the core concepts of machine
learning and the Scikit-Learn package. We will introduce the
scikit-learn API, and use it to explore the basic categories of machine
learning problems and related topics such as feature selection and model
validation, and practice applying these tools to real-world data sets.&lt;/p&gt;
</summary></entry></feed>