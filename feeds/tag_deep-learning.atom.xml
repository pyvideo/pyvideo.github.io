<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/tag_deep-learning.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2019-09-27T00:00:00+00:00</updated><entry><title>Know what you don't know, Tools to understand uncertainty in DL and use it in your favor</title><link href="https://pyvideo.org/pydata-cordoba-2019/know-what-you-dont-know-tools-to-understand-uncertainty-in-dl-and-use-it-in-your-favor.html" rel="alternate"></link><published>2019-09-27T00:00:00+00:00</published><updated>2019-09-27T00:00:00+00:00</updated><author><name>Julian Eisenschlos</name></author><id>tag:pyvideo.org,2019-09-27:pydata-cordoba-2019/know-what-you-dont-know-tools-to-understand-uncertainty-in-dl-and-use-it-in-your-favor.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As ML finds its way into critical applications like healthcare and autonomous vehicles, important concerns arise. When should it defer to a human to evaluate? How much risk is reasonable? Through the lens of Bayesian Neural Networks, we will show how to measure model uncertainty in Deep Learning models in practical settings, with immediate applications to active sampling and reinforcement learning&lt;/p&gt;
</summary><category term="machine learning"></category><category term="deep learning"></category><category term="neural networks"></category><category term="bayesian neural networks"></category></entry><entry><title>AI in Contemporary Art</title><link href="https://pyvideo.org/europython-2019/ai-in-contemporary-art.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Luba Elliott</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/ai-in-contemporary-art.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Over the past couple of years, there has been increasing interest in
applying the latest advances in machine learning to creative projects in
art and design. From DeepDream and style transfer to a GAN-generated
painting selling for $430,000 at auction, AI art has moved beyond the
world of research and academia and become a trend in its own right.
Meanwhile, the contemporary art world's fascination with the social
impact of facial recognition, recommendation systems and deep fakes has
encouraged artists to explore AI critically as subject matter. This talk
will give an overview of how artists and technologists are using and
thinking about machine learning, its creative potential and societal
impact.&lt;/p&gt;
</summary><category term="Algorithms"></category><category term="Computer Vision"></category><category term="Deep Learning"></category></entry><entry><title>Audio Classification with Machine Learning</title><link href="https://pyvideo.org/europython-2019/audio-classification-with-machine-learning.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Jon Nordby</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/audio-classification-with-machine-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Sound is a rich source of information about the world around us.&lt;/div&gt;
&lt;div class="line"&gt;Modern deep learning approaches can give human-like performance on a
range of sound classifiction tasks.&lt;/div&gt;
&lt;div class="line"&gt;This makes it possible to build systems that use sound to for example:&lt;/div&gt;
&lt;div class="line"&gt;understand speech, to analyze music, to assist in medical diagnostics,
detect quality problems in manufacturing, and to study the behavior of
animals.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This talk will show you how to build practical machine learning models
that can classify sound.&lt;/div&gt;
&lt;div class="line"&gt;We will convert sound into spectrograms, a visual representation of
sound over time,&lt;/div&gt;
&lt;div class="line"&gt;and apply machine learning models similar to what is used to for image
classification.&lt;/div&gt;
&lt;div class="line"&gt;The focus will be on Convolutional Neural Networks, which have been
shown to work very well for this task.&lt;/div&gt;
&lt;div class="line"&gt;The Keras and Tensorflow deep learning frameworks will be used. Some
tricks for getting usable results with small amounts of data will be
covered, including transfer learning, audio embeddings and data
augmentation.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;A basic understanding of machine learning is recommended.&lt;/div&gt;
&lt;div class="line"&gt;Familiarity with digital sound is a bonus.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category></entry><entry><title>Deep Learning with TensorFlow 2.0</title><link href="https://pyvideo.org/europython-2019/deep-learning-with-tensorflow-20.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Brad Miro</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/deep-learning-with-tensorflow-20.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about the updates being made to TensorFlow in its 2.0 version.
We‚Äôll give an overview of what‚Äôs available in the new version as well as
do a deep dive into an example using its central high-level API, Keras.
You‚Äôll walk away with a better understanding of how you can get started
building machine learning models in Python with TensorFlow 2.0 as well
as the other exciting available features!&lt;/p&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category><category term="Scientific Libraries (Numpy/Pandas/SciKit/...)"></category></entry><entry><title>Explaining AI to Managers üë®‚Äçüíºü§ñüë©‚Äçüíº</title><link href="https://pyvideo.org/europython-2019/explaining-ai-to-managers.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Alexander CS Hendorf</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/explaining-ai-to-managers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Artificial intelligence promises great value. The technology is mostly
understood only by few, yet still unexplainable even for experts.&lt;/div&gt;
&lt;div class="line"&gt;In this talk I'll present how to narrow the hype down to real value
explainable to everyone in your organisation - without the math.&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can you downloaded at &lt;a class="reference external" href="http://bit.ly/ai-executives-data-litteracy"&gt;http://bit.ly/ai-executives-data-litteracy&lt;/a&gt;-
europython&lt;/p&gt;
</summary><category term="Analytics"></category><category term="Business"></category><category term="Deep Learning"></category><category term="Management"></category></entry><entry><title>Natural language processing with neural networks.</title><link href="https://pyvideo.org/europython-2019/natural-language-processing-with-neural-networks.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Hubert Bry≈Çkowski</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/natural-language-processing-with-neural-networks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Getting started with a natural language processing and neural networks
is easier nowadays thanks to the numerous talks and tutorials. The
goal is to dive deeper for those who already know the basics, or want
to expand their knowledge in a machine learning field.&lt;/div&gt;
&lt;div class="line"&gt;The talk will start with the common use cases that can be generalized
to the specific problems in a NLP world. Then I will present an
overview of possible features that we can use as input to our network,
and show that even simple feature engineering can change our results.&lt;/div&gt;
&lt;div class="line"&gt;Furthermore, I will compare different network architectures - starting
with the fully connected networks, through convolution neural networks
to recursive neural networks. I will not only considering the good
parts, but also - what is usually overlooked - pitfalls of every
solution.&lt;/div&gt;
&lt;div class="line"&gt;All of these will be done considering number of parameters, which
transfers into training and prediction costs and time. I will also
share a number of ‚Äútricks‚Äù that enables getting the best results even
out of the simple architectures, as these are usually the fastest and
quite often hard to beat, at the same time being the easiest to
interpret.&lt;/div&gt;
&lt;/div&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category><category term="Natural Language Processing"></category></entry><entry><title>The state of Machine Learning Operations in 2019</title><link href="https://pyvideo.org/europython-2019/the-state-of-machine-learning-operations-in-2019.html" rel="alternate"></link><published>2019-07-11T00:00:00+00:00</published><updated>2019-07-11T00:00:00+00:00</updated><author><name>Alejandro Saucedo</name></author><id>tag:pyvideo.org,2019-07-11:europython-2019/the-state-of-machine-learning-operations-in-2019.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will provide an overview of the key challenges and trends in
the productization of machine learning systems, including concepts such
as reproducibility, explainability and orchestration. The talk will also
provide a high level overview of several key open source tools and
frameworks available to tackle these issues, which have been identifyed
putting together the Awesome Machine Learning Operations list
(&lt;a class="reference external" href="https://github.com/EthicalML/awesome-machine-learning-operations"&gt;https://github.com/EthicalML/awesome-machine-learning-operations&lt;/a&gt;).&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The key concepts that will be covered are:&lt;/div&gt;
&lt;div class="line"&gt;* Reproducibility&lt;/div&gt;
&lt;div class="line"&gt;* Explainability&lt;/div&gt;
&lt;div class="line"&gt;* Orchestration of models&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The reproducibility piece will cover key motivations as well as
practical requirements for model versioning, together with tools that
allow data scientists to achieve version control of model+config+data to
ensure full model lineage.&lt;/p&gt;
&lt;p&gt;The explainability piece will contain a high level overview of why this
has become an important topic in machine learning, including the high
profile incidents that tech companies have experienced where undesired
biases have slipped into data. This will also include a high level
overview of some of the tools available.&lt;/p&gt;
&lt;p&gt;Finally, the orchestration piece will cover some of the fundamental
challenges with large scale serving of models, together with some of the
key tools that are available to ensure this challenge can be tackled.&lt;/p&gt;
</summary><category term="Architecture"></category><category term="Data"></category><category term="Data Science"></category><category term="Deep Learning"></category><category term="Machine-Learning"></category></entry><entry><title>Accelerate your Deep Learning Inferencing with the Intel¬Æ DL Boost technology</title><link href="https://pyvideo.org/europython-2019/accelerate-your-deep-learning-inferencing-with-the-intelr-dl-boost-technology.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Shailen Sobhee</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/accelerate-your-deep-learning-inferencing-with-the-intelr-dl-boost-technology.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn about Intel¬Æ Deep Learning Boost, also known as Vector Neural
Network Instructions (VNNI), a new set of AVX-512 instructions, that are
designed to deliver significantly more efficient Deep Learning
(Inference) acceleration. Through this technology, I will show you how
you can perform low-precision (INT8) inference much faster on hardware
that support the VNNI instruction set (for example, the 2nd generation
Intel Xeon Scalable processors, codenamed, Cascade Lake). In the live
Jupyter notebook session, you can will be able to see the benefits of
this new hardware technology.&lt;/p&gt;
&lt;p&gt;Note: This is an advanced talk. Knowledge about Deep Learning,
Inferencing and basic awareness of hardware instruction sets would be
desirable.&lt;/p&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Performance"></category><category term="python"></category></entry><entry><title>Building a Powerful Pet Detector in Notebooks</title><link href="https://pyvideo.org/europython-2019/building-a-powerful-pet-detector-in-notebooks.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Katherine Kampf</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/building-a-powerful-pet-detector-in-notebooks.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ever wondered what breed that dog or cat is? Let‚Äôs build a pet detector
service to recognize them in pictures! In this talk, we will walk
through the training, optimizing, and deploying of a deep learning model
using Azure Notebooks. We will use transfer learning to retrain a
MobileNet model using TensorFlow to recognize dog and cat breeds using
the Oxford IIIT Pet Dataset. Next, we‚Äôll optimize the model and tune our
hyperparameters to improve the model accuracy. Finally, we will deploy
the model as a web service in. Come to learn how you can quickly create
accurate image recognition models with a few simple techniques!&lt;/p&gt;
</summary><category term="Data"></category><category term="Data Science"></category><category term="Deep Learning"></category><category term="Jupyter"></category><category term="Machine-Learning"></category></entry><entry><title>Geospatial Analysis using Python and JupyterHub</title><link href="https://pyvideo.org/europython-2019/geospatial-analysis-using-python-and-jupyterhub.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Martin Christen</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/geospatial-analysis-using-python-and-jupyterhub.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Geospatial data is data containing a spatial component ‚Äì describing
objects with a reference to the planet's surface. This data usually
consists of a spatial component, of various attributes, and sometimes of
a time reference (where, what, and when). Efficient processing and
visualization of small to large-scale spatial data is a challenging
task.&lt;/p&gt;
&lt;p&gt;This talk describes how to process and visualize geospatial vector and
raster data using Python and the Jupyter Notebook.&lt;/p&gt;
&lt;p&gt;To process the data a high performance computer with 4 GPUS (NVidia
Tesla V100), 192 GB RAM, 44 CPU Cores is used to run JupyterHub.&lt;/p&gt;
&lt;p&gt;There are numerous modules available which help using geospatial data in
using low- and high-level interfaces, which are shown in this
presentation. In addition, it is shown how to use deep learning for
raster analysis using the high performance GPUs and several deep
learning frameworks.&lt;/p&gt;
</summary><category term="Analytics"></category><category term="Big Data"></category><category term="Deep Learning"></category><category term="GPU"></category><category term="Visualization"></category></entry><entry><title>Getting Your Data Joie De Vivre Back!</title><link href="https://pyvideo.org/europython-2019/getting-your-data-joie-de-vivre-back.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Lynn Cherny</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/getting-your-data-joie-de-vivre-back.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Most of us work too much and play too little. When was the last time you
smiled at something you made? Playing with fun datasets, especially big
data sets, opens up weird new forms of technical recreation. Why not
train an amusing model in a browser tab while you're waiting for that
day-job Spark query to finish? I'll show you some data toys I've built
using AI and interesting data sets: Most of them involve both backend
data science and front-end visualization tricks. They range from
poetry-composition helpers to game log analysis to image deconstruction
and reconstruction. All of them taught me something, often about myself
and what I like artistically, and sometimes about what &amp;quot;big data&amp;quot;
actually means.&lt;/p&gt;
</summary><category term="Big Data"></category><category term="Deep Learning"></category><category term="Visualization"></category></entry><entry><title>How to train an image classifier using PyTorch</title><link href="https://pyvideo.org/europython-2019/how-to-train-an-image-classifier-using-pytorch.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Rogier van der Geer</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/how-to-train-an-image-classifier-using-pytorch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Neural networks are everywhere nowadays. But while it seems everyone is
using them, training your first neural network can be quite a hurdle to
overcome.&lt;/p&gt;
&lt;p&gt;In this talk I will take you by the hand, and following an example image
classifier I trained, I will take you through the steps of making an
image classifier in PyTorch. I will show you code snippets and explain
the more intricate parts. Also, I will tell you about my experience, and
about what mistakes to prevent. After this all you need to start
training your first classifier is a data set!&lt;/p&gt;
&lt;p&gt;Of course I will provide a link to the full codebase at the end. The
talk will focus on the practical aspect of training a neural network,
and will only touch the theoretical side very briefly. Some basic prior
knowledge of neural networks is beneficial, but not required, to follow
this talk.&lt;/p&gt;
</summary><category term="Deep Learning"></category><category term="Fun and Humor"></category><category term="Image Processing"></category><category term="Machine-Learning"></category><category term="Scientific Libraries (Numpy/Pandas/SciKit/...)"></category></entry><entry><title>Supercharge your Deep Learning algorithms with optimized software</title><link href="https://pyvideo.org/europython-2019/supercharge-your-deep-learning-algorithms-with-optimized-software.html" rel="alternate"></link><published>2019-07-10T00:00:00+00:00</published><updated>2019-07-10T00:00:00+00:00</updated><author><name>Shailen Sobhee</name></author><id>tag:pyvideo.org,2019-07-10:europython-2019/supercharge-your-deep-learning-algorithms-with-optimized-software.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk, you will learn various optimization techniques to improve
the runtime performance of your deep learning algorithms on Intel
architecture. The presentation will cover how to accelerate the training
of your deep neural networks with Tensorflow thanks to the highly
optimized Intel¬Æ Math Kernel Library (Intel¬Æ MKL) and how we boost
inferencing with Intel¬Æ nGraph and with the Intel¬Æ Distribution of
OpenVINO‚Ñ¢.&lt;/p&gt;
</summary><category term="Data Science"></category><category term="Deep Learning"></category><category term="Open-Source"></category></entry><entry><title>Deep learning: the final frontier for time series analysis and signal processing?</title><link href="https://pyvideo.org/pycon-italia-2019/deep-learning-the-final-frontier-for-time-series-analysis-and-signal-processing.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Alexandr Honchar</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/deep-learning-the-final-frontier-for-time-series-analysis-and-signal-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deep neural networks are becoming irreplaceable for analyzing most kinds
of data that humans supposed to exceed in - images, video, sounds,
texts. They can not only predict something based on some input but also
generate new images or sounds. Meanwhile, we are forgetting about
another very important source of data - signals (or time series, which
will be interchangeably here), that gets less hype in public but
benefits a lot from applying deep learning comparing to classical
approaches.&lt;/p&gt;
&lt;p&gt;In this talk, we will review what are sources of time series and what
business goals are we solving while analyzing them, what are ‚Äúold‚Äù tools
for analysis and how deep neural nets overcome them, we will learn the
latest trends and ruin some myths and, moreover, we will see how
generative models can be applied to the signal processing as well.&lt;/p&gt;
&lt;p&gt;After this talk, you‚Äôll be able to boost your current solutions in
signal processing or time series analysis with deep learning. It will be
also interesting for practitioners in other areas, like computer vision
or NLP since we will discuss some concepts that are widely applicable.
Previous experience with time series is not required, but some
theoretical or practical experience with machine learning and/or neural
networks is preferred.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1716"&gt;https://python.it/feedback-1716&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 18:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="machine-learning"></category><category term="deep learning"></category><category term="biomedical-data-science"></category><category term="TimeSeries"></category><category term="signal-processing"></category><category term="neural network"></category><category term="finance"></category></entry><entry><title>Deep Learning with PyTorch for Fun and Profit (Part III / Italian Edition: Divina Commedia)</title><link href="https://pyvideo.org/pycon-italia-2019/deep-learning-with-pytorch-for-fun-and-profit-part-iii-italian-edition-divina-commedia.html" rel="alternate"></link><published>2019-05-03T00:00:00+00:00</published><updated>2019-05-03T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2019-05-03:pycon-italia-2019/deep-learning-with-pytorch-for-fun-and-profit-part-iii-italian-edition-divina-commedia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There are all these great articles and blog posts about Deep Learning
describing all that awesome stuff. - Is it all that easy? Let‚Äôs check!&lt;/p&gt;
&lt;p&gt;We‚Äôll look into: style transfer (making a picture look like painting),
speech generation (like Siri or Alexa) and text generation (writing a
story). In this talk I‚Äôll describe the whole journey: A fun ride from
the idea to the very end including all the struggles, failures and
successes.&lt;/p&gt;
&lt;p&gt;This is an ongoing talk on how far we can get creating a full &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Radio_drama"&gt;radio
drama (H√∂rspiel)&lt;/a&gt; with
deep learning and the resources required.&lt;/p&gt;
&lt;p&gt;Steps, we‚Äôll cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The data challenge: get the data ready&lt;/li&gt;
&lt;li&gt;Creating a character-level language models with an Recurrent Neural
Network&lt;/li&gt;
&lt;li&gt;Creating a text generator&lt;/li&gt;
&lt;li&gt;Creating artwork&lt;/li&gt;
&lt;li&gt;Synthesising speech&lt;/li&gt;
&lt;li&gt;Making it sound like a real person&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this special PyCon X edition we will also try to recreate text in the
style of Dante‚Äô Divina Commedia.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1687"&gt;https://python.it/feedback-1687&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="Pytorch"></category><category term="art"></category><category term="Artificial Intelligence"></category><category term="nlp"></category></entry><entry><title>(Alpha) Zero to Elo</title><link href="https://pyvideo.org/pycon-italia-2018/alpha-zero-to-elo.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Simone Totaro</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/alpha-zero-to-elo.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Reinforcement learning is a sequential decision making framework that
has received a lot of attention given incredible results from DeepMind,
DQN and AlphaGo. More recently DeepMind delivered a more general AI game
player call AlphaZero, which learns by self-play.&lt;/p&gt;
&lt;p&gt;During this session we will introduce you the key ideas behind
AlphaZero:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Reinforcement Learning and Value function&lt;/li&gt;
&lt;li&gt;MonteCarlo Tree Search&lt;/li&gt;
&lt;li&gt;Self-play&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We will explore how they contribute to beat greatest Go player of our
time, in Python.&lt;/p&gt;
&lt;p&gt;Agenda:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Introduction to AI in games&lt;/li&gt;
&lt;li&gt;What AlphaZero is made of? (Boring theory)&lt;/li&gt;
&lt;li&gt;How to build your own AlphaZero? (Cool code)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="reinforcement-learning"></category><category term="datascience"></category></entry><entry><title>PyTorch: a modern scientific computing library for Python</title><link href="https://pyvideo.org/pycon-italia-2018/pytorch-a-modern-scientific-computing-library-for-python.html" rel="alternate"></link><published>2018-04-22T00:00:00+00:00</published><updated>2018-04-22T00:00:00+00:00</updated><author><name>Adam Paszke</name></author><id>tag:pyvideo.org,2018-04-22:pycon-italia-2018/pytorch-a-modern-scientific-computing-library-for-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is very well known for its ecosystem of mature scientific
computing packages. They range from low-level providers of generic
functionality like NumPy to very domain specific tools like
scikit-learn. A few years back, machine learning frameworks could be
easily classified into the second category, but this is changing now.
They become increasingly powerful and start to be applied in a whole
variety of settings different than their original purpose. In this talk,
I‚Äôll present a basic tour of PyTorch, a relatively new library that has
already gathered a significant user base. I‚Äôll describe features useful
both in machine learning and other domains, explain how it fits into the
Python landscape, and showcase scenarios where it provides benefits over
existing tools.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;domenica 22 aprile&lt;/strong&gt; at 09:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="Pytorch"></category><category term="pydata"></category></entry><entry><title>Databases for Data Science</title><link href="https://pyvideo.org/pycon-italia-2018/databases-for-data-science.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Alexander Hendorf</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/databases-for-data-science.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I‚Äôll present the usefulness of databases for data science
projects.&lt;/p&gt;
&lt;p&gt;Databases have been around for decades and were highly optimised for
data aggregations during that time. Not only &lt;em&gt;Big data&lt;/em&gt; has changed the
landscape of databases massively in the past years - we nowadays can
find many &lt;em&gt;Open Source&lt;/em&gt; projects among the most popular dbs.&lt;/p&gt;
&lt;p&gt;After this talk you will be enabled to decide if a database can make
your work more efficient and which direction to look to.&lt;/p&gt;
&lt;p&gt;Outline:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;A quick recap on database history, &lt;em&gt;it all starts in Florence - where
else‚Ä¶&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;What is a database? What‚Äôs a data store? data lake?‚Ä¶&lt;/li&gt;
&lt;li&gt;Relational SQL systems and their benefits for DS&lt;/li&gt;
&lt;li&gt;NoSQL systems and their benefits for DS&lt;/li&gt;
&lt;li&gt;How to chose the db fitting your needs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="data-structures"></category><category term="Deep-Learning"></category><category term="data-science"></category><category term="database"></category></entry><entry><title>Deep Learning in Computer Vision: state of the art techniques and applications in industry</title><link href="https://pyvideo.org/pycon-italia-2018/deep-learning-in-computer-vision-state-of-the-art-techniques-and-applications-in-industry.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Rocco Michele Lancellotti</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/deep-learning-in-computer-vision-state-of-the-art-techniques-and-applications-in-industry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Audience Level Data Scientists and Data Science Practitioners with basic
to intermediate level experience in image recognition/object detection
deep learning applications, basic Python programming skills.&lt;/p&gt;
&lt;p&gt;Brief Description Deep Learning is revolutionizing both Data Science and
Artificial Intelligence real-world applications. Yet, being the
discipline so young, it‚Äôs not straightforward to understand both the
reasoning at its core and its countless use cases. In this talk we will
review the basics of Neural Networks, from the classical CNNs to the
current state of the art, comparing them through real industry
applications and highlighting pros and cons in a business setting.&lt;/p&gt;
&lt;p&gt;Abstract / Summary Deep Learning has been on a hype roll for a few
years. Being such a young discipline makes deep learning interesting,
but also subject to misunderstandings. Every year, brand new
architectures rise, taking over old ones and outperforming state of the
art benchmarks for accuracy. Further, the applications of deep learning
are at the core of some of the most advanced technologies like
autonomous driving, personal assistants, and customer profiling. In such
a context it is not straightforward to grasp what is at the core of deep
learning itself, and what is common to all the architectures, neither to
realize how concrete use cases can be tackled. Using Python, we‚Äôll take
the audience from the simplest neuron, the atom of the deep learning
world, to the most recent architectures. We‚Äôll achieve this using a
simple Convolutional Neural Network as a building block and comparing
that to the latest breakthroughs in image recognition. In doing this
we‚Äôll try to give an answer to the following questions: ‚Ä¢ Is deep
learning actually useful in a business setting? ‚Ä¢ What about state of
the art techniques in the Computer Vision field: are we just stacking
more and more convolutional and pooling layers? We will then address
real industry applications (e.g. the insurance sector) using analyzed
techniques. This will include opening some of these so- called black box
models and retraining them, at least partially, on our datasets, or
building a complete brand new network from scratch, tailoring it
according to the application needs and datasets characteristics.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="image-recognition"></category><category term="transfer-learning"></category><category term="industry applications"></category><category term="deep learning"></category><category term="Deep-Learning"></category><category term="ComputerVision"></category><category term="computer vision"></category><category term="image recognition"></category><category term="transfer learning"></category><category term="industry-applications"></category></entry><entry><title>Deep Learning in Computer Vision: state of the art techniques and applications in industry</title><link href="https://pyvideo.org/pycon-italia-2018/deep-learning-in-computer-vision-state-of-the-art-techniques-and-applications-in-industry.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Rocco Michele Lancellotti</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/deep-learning-in-computer-vision-state-of-the-art-techniques-and-applications-in-industry.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Audience Level Data Scientists and Data Science Practitioners with basic
to intermediate level experience in image recognition/object detection
deep learning applications, basic Python programming skills.&lt;/p&gt;
&lt;p&gt;Brief Description Deep Learning is revolutionizing both Data Science and
Artificial Intelligence real-world applications. Yet, being the
discipline so young, it‚Äôs not straightforward to understand both the
reasoning at its core and its countless use cases. In this talk we will
review the basics of Neural Networks, from the classical CNNs to the
current state of the art, comparing them through real industry
applications and highlighting pros and cons in a business setting.&lt;/p&gt;
&lt;p&gt;Abstract / Summary Deep Learning has been on a hype roll for a few
years. Being such a young discipline makes deep learning interesting,
but also subject to misunderstandings. Every year, brand new
architectures rise, taking over old ones and outperforming state of the
art benchmarks for accuracy. Further, the applications of deep learning
are at the core of some of the most advanced technologies like
autonomous driving, personal assistants, and customer profiling. In such
a context it is not straightforward to grasp what is at the core of deep
learning itself, and what is common to all the architectures, neither to
realize how concrete use cases can be tackled. Using Python, we‚Äôll take
the audience from the simplest neuron, the atom of the deep learning
world, to the most recent architectures. We‚Äôll achieve this using a
simple Convolutional Neural Network as a building block and comparing
that to the latest breakthroughs in image recognition. In doing this
we‚Äôll try to give an answer to the following questions: ‚Ä¢ Is deep
learning actually useful in a business setting? ‚Ä¢ What about state of
the art techniques in the Computer Vision field: are we just stacking
more and more convolutional and pooling layers? We will then address
real industry applications (e.g. the insurance sector) using analyzed
techniques. This will include opening some of these so- called black box
models and retraining them, at least partially, on our datasets, or
building a complete brand new network from scratch, tailoring it
according to the application needs and datasets characteristics.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="image-recognition"></category><category term="transfer-learning"></category><category term="industry applications"></category><category term="deep learning"></category><category term="Deep-Learning"></category><category term="ComputerVision"></category><category term="computer vision"></category><category term="image recognition"></category><category term="transfer learning"></category><category term="industry-applications"></category></entry><entry><title>How to make your model happy again</title><link href="https://pyvideo.org/pycon-italia-2018/how-to-make-your-model-happy-again.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Alessia Marcolini</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/how-to-make-your-model-happy-again.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nowadays ‚Äòbuild and run‚Äô a predictive model is a quite easy task, thanks
to frameworks that simplify things and set good defaults for you (i.e.
Keras).&lt;/p&gt;
&lt;p&gt;But how do you &lt;em&gt;effectively&lt;/em&gt; train a model, in order to gain better
performance or to get your results faster? Do you feel frustrated every
time you need to set and then tune the network‚Äôs hyperparameters, too?
Don‚Äôt worry!&lt;/p&gt;
&lt;p&gt;In this talk I will share some practical tips&amp;amp;tricks (such as Model
Ensembling and learning rate schedulers) and relative examples, derived
from my personal experience or from literature, with the aim to improve
neural networks capabilities and to get the convergence faster.&lt;/p&gt;
&lt;p&gt;This talk is aimed at data scientists or everyone passionate about this
topic who wants to learn more.&lt;/p&gt;
&lt;p&gt;Gently inspired by Practical Deep Learning for Coders Part 1 v2 of
&lt;a class="reference external" href="http://fast.ai"&gt;fast.ai&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="Data-Scientist"></category><category term="neural network"></category><category term="pydata"></category></entry><entry><title>Image Generation with Tensorflow (GANs)</title><link href="https://pyvideo.org/pycon-italia-2018/image-generation-with-tensorflow-gans.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Cenk Bircanoƒülu</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/image-generation-with-tensorflow-gans.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is an opensource language that has a wide community, and nowadays
the biggest companies also create frameworks, libraries with Python and
open- sourced them. Tensorflow is the most used library in Deep Learning
by researchers and there are many examples of various fields like
Computer Vision, Natural Language Processing, Signal Processing.&lt;/p&gt;
&lt;p&gt;Nowadays, Generative Adversarial Networks a.k.a. GAN collect nearly all
interests on it by the Computer Vision experts. There are diverse
applications like image colorization, image generation from random
numbers, computer game character creation, face frontalization, face
alignment, 2D to 3D image transfer, style transfer and so on.&lt;/p&gt;
&lt;p&gt;In this talk, we are going to talk about GANs and the implementation
details on Tensorflow which is backed by Google and has the power of
either work on CPU and GPU.&lt;/p&gt;
&lt;p&gt;The implementation of GANs can be divided into 2 parts. One is called
generator and other is called discriminator. In this talk, the
differences between the discriminator and generator also are mentioned.&lt;/p&gt;
&lt;p&gt;Besides, some various architecture of GANs like PGGAN, DCGAN, STARGAN,
architectures showed in Tensorflow code, which of these are not already
implemented in Tensorflow by the date now.&lt;/p&gt;
&lt;p&gt;The session will be finished with showing some examples of outputs in
face generation, room generation, and also live demo of the style
transfer implementation.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 15:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="image-processing"></category><category term="computer-science"></category><category term="tensorflow"></category><category term="ComputerVision"></category></entry><entry><title>Recent advancements in NLP and Deep Learning: A Quant's Perspective</title><link href="https://pyvideo.org/pycon-italia-2018/recent-advancements-in-nlp-and-deep-learning-a-quants-perspective.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Umit Mert Cakmak</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/recent-advancements-in-nlp-and-deep-learning-a-quants-perspective.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;There is a gold-rush among hedge-funds for text mining algorithms to
quantify textual data and generate trading signals. Harnessing the power
of alternative data sources became crucial to find novel ways of
enhancing trading strategies.&lt;/p&gt;
&lt;p&gt;With the proliferation of new data sources, natural language data became
one of the most important data sources which could represent the public
sentiment and opinion about market events, which then can be used to
predict financial markets.&lt;/p&gt;
&lt;p&gt;Talk is split into 5 parts;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Who is a quant and how do they use NLP?&lt;/li&gt;
&lt;li&gt;How deep learning has changed NLP?&lt;/li&gt;
&lt;li&gt;Let‚Äôs get dirty with word embeddings&lt;/li&gt;
&lt;li&gt;Performant deep learning layer for NLP: The Recurrent Layer&lt;/li&gt;
&lt;li&gt;Using all that to make money&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="section" id="who-is-a-quant-and-how-do-they-use-nlp"&gt;
&lt;h4&gt;1. Who is a quant and how do they use NLP?&lt;/h4&gt;
&lt;p&gt;Quants use mathematical and statistical methods to create algorithmic
trading strategies.&lt;/p&gt;
&lt;p&gt;Due to recent advances in available deep learning frameworks and
datasets (time series, text, video etc) together with decreasing cost of
parallelisable hardware, quants are experimenting with various NLP
methods which are applicable to quantitative trading.&lt;/p&gt;
&lt;p&gt;In this section, we will get familiar with the brief history of text
mining work that quants have done so far and recent advancements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="how-deep-learning-has-changed-nlp"&gt;
&lt;h4&gt;2. How deep learning has changed NLP?&lt;/h4&gt;
&lt;p&gt;In recent years, data representation and modeling methods are vastly
improved. For example when it comes to textual data, rather than using
high dimensional sparse matrices and suffering from curse of
dimensionality, distributional vectors are more efficient to work with.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about distributional vectors a.k.a. word
embeddings and recent neural network architectures used when building
NLP models.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lets-get-dirty-with-word-embeddings"&gt;
&lt;h4&gt;3. Let‚Äôs get dirty with word embeddings&lt;/h4&gt;
&lt;p&gt;Models such as Word2vec or GloVe helps us create word embeddings from
large unlabeled corpus which represent the relation between words, their
contextual relationships in numerical vector spaces and these
representations not only work for words but also could be used for
phrases and sentences.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about inner workings of these models and
important points when creating domain-specific embeddings (e.g. for
sentiment analysis in financial domain).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="performant-deep-learning-layer-for-nlp-the-recurrent-layer"&gt;
&lt;h4&gt;4. Performant deep learning layer for NLP: The Recurrent Layer&lt;/h4&gt;
&lt;p&gt;Recurrent Neural Networks (RNNs) can capture and hold the information
which was seen before (context), which is important for dealing with
unbounded context in NLP tasks.&lt;/p&gt;
&lt;p&gt;Long Short Term Memory (LSTM) networks, which is a special type of RNN,
can understand the context even if words have long term dependencies,
words which are far back in their sequence.&lt;/p&gt;
&lt;p&gt;In this talk, I will compare LSTMs with other deep learning
architectures and will look at LSTM unit from a technical point of view.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-all-that-to-make-money"&gt;
&lt;h4&gt;5. Using all that to make money&lt;/h4&gt;
&lt;p&gt;Financial news, especially if it‚Äôs major, can change the sentiment among
investors and affect the related asset price with immediate price
corrections.&lt;/p&gt;
&lt;p&gt;For example, what‚Äôs been communicated in quarterly earnings calls might
indicate whether the price of share will drop or increase based on the
language used. If the message of the company is not direct and featuring
complex sounding language, it usually indicates that there‚Äôs some shady
stuff going on and if this information extracted right, it‚Äôs a valuable
trading signal. For similar reasons, scanning announcements and
financial disclosures for trading signals became a common NLP practice
in investment industry.&lt;/p&gt;
&lt;p&gt;In this section, I will talk about the various data sources that
researchers can use and also explain common NLP workflows and deep
learning practices for quantifying textual data for generating trading
signals.&lt;/p&gt;
&lt;p&gt;I will end with summary with application architecture in case anyone
would like to implement similar systems for their own use.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 14:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</summary><category term="nlp"></category><category term="data-science"></category><category term="Keras"></category><category term="Python"></category><category term="Deep-Learning"></category><category term="machine-learning"></category><category term="spaCy"></category><category term="nltk"></category></entry><entry><title>Recommendation Model for Ranking Matching Houses</title><link href="https://pyvideo.org/pycon-italia-2018/recommendation-model-for-ranking-matching-houses.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Chiara Basei</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/recommendation-model-for-ranking-matching-houses.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;We aim to address the problem of missing data for recommendation systems
with Python 2.7 and the H2O package. To this end, we ‚Äúre-impute‚Äù
artificially removed values into a dataframe with the help of two
models: (1) &lt;strong&gt;Deep Learning with Autoencoder&lt;/strong&gt; &amp;amp; (2) &lt;strong&gt;Generalized Low
Rank Model&lt;/strong&gt; (GLRM). To tune and evaluate both models, we implement a
cross validation that optimizes the imputation accuracy of the
artifically removed values. As a result, &lt;strong&gt;Deep Learning with
Autoencoder&lt;/strong&gt; consistently preforms better in terms of precision, wheras
&lt;strong&gt;GLRM&lt;/strong&gt; performs better in terms of execution time. Finally, we also
present a new ranking formula which is inspired by &lt;em&gt;Lucene Similarity&lt;/em&gt;
but weighs the cosine similarity according to the percentage of matches.&lt;/p&gt;
&lt;p&gt;It will be shown an implementation of the recommendation system to real
estate data. We will show:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;some tuning plots of the models for imputation of missing features
of real estate queries;&lt;/li&gt;
&lt;li&gt;a discussion about approximation of the scoring formula to rank the
matching houses;&lt;/li&gt;
&lt;li&gt;a excerpt of the recommendation system front-end implemented in
Flask.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To attend this talk, a basic knowledge about statistics and Python is
helpful.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 17:45 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="GLRM"></category><category term="Autoencoder"></category><category term="H2O"></category><category term="Recommendation"></category></entry><entry><title>Reproducibility, and Selection Bias in Learning: when just Cross Validation is not enough!</title><link href="https://pyvideo.org/pycon-italia-2018/reproducibility-and-selection-bias-in-learning-when-just-cross-validation-is-not-enough.html" rel="alternate"></link><published>2018-04-21T00:00:00+00:00</published><updated>2018-04-21T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2018-04-21:pycon-italia-2018/reproducibility-and-selection-bias-in-learning-when-just-cross-validation-is-not-enough.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Reproducibility&lt;/em&gt; - the ability to recompute results ‚Äî and
&lt;em&gt;replicability&lt;/em&gt; ‚Äî the chances other experimenters will achieve a
consistent result[1]- are among the main important beliefs of the
&lt;em&gt;scientific method&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Surprisingly, these two aspects are often underestimated or not even
considered when setting up scientific experimental pipelines. In this,
one of the main threat to replicability is the &lt;em&gt;selection bias&lt;/em&gt; , that
is the error in choosing the individuals or groups to take part in a
study. Selection bias may come in different flavours: the selection of
the population of samples in the dataset ( &lt;em&gt;sample bias&lt;/em&gt; ); the
selection of features used by the learning models, particularly sensible
in case of high dimensionality; the selection of hyper parameter best
performing on specific dataset(s). If not properly considered, the
selection bias may strongly affect the validity of derived conclusions,
as well as the reliability of the learning model.&lt;/p&gt;
&lt;p&gt;In this talk I will provide a solid introduction to the topics of
reproducibility and selection bias, with examples taken from the
biomedical research, in which reliability is paramount.&lt;/p&gt;
&lt;p&gt;From a more technological perspective, to date the scientific Python
ecosystem still misses tools to consolidate the experimental pipelines
in in research, that can be used together with Machine and Deep learning
frameworks (e.g. &lt;tt class="docutils literal"&gt;sklearn&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;keras&lt;/tt&gt;). In this talk, I will
present &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;reproducible-learn&lt;/span&gt;&lt;/tt&gt;, a new Python frameworks for reproducible
research to be used for machine and deep learning.&lt;/p&gt;
&lt;p&gt;During the talk, the main features of the framework will be presented,
along with several examples, technical insights and implementation
choices to be discussed with the audience.&lt;/p&gt;
&lt;p&gt;The talk is intended for &lt;em&gt;intermediate&lt;/em&gt; PyData researchers and
practitioners. Basic prior knowledge of the main Machine Learning
concepts is assumed for the first part of the talk. On the other hand,
good proficiency with the Python language and with scientific python
libraries (e.g. &lt;tt class="docutils literal"&gt;numpy&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;sklearn&lt;/tt&gt;) are required for the second
part.&lt;/p&gt;
&lt;p&gt;‚Äì &lt;a class="reference external" href="http://www.pnas.org/content/112/6/1645.full"&gt;1&lt;/a&gt; &lt;em&gt;Reproducible
research can still be wrong: Adopting a prevention approach&lt;/em&gt; by Jeffrey
T. Leek, and Roger D. Peng&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.cancer.gov/publications/dictionaries/cancer-terms?CdrID=44087"&gt;2&lt;/a&gt;
Dictionary of Cancer Terms -&amp;gt; ‚Äúselection bias‚Äù&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 18:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="Reproducibility"></category><category term="Machine Learning"></category></entry><entry><title>Applying serverless architecture pattern to distributed data processing</title><link href="https://pyvideo.org/pycon-italia-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Denis Makogon</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/applying-serverless-architecture-pattern-to-distributed-data-processing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Serverless architectures refer to applications that significantly depend
on ‚Äúcloud‚Äù services (knows as Backend as a Service) or on custom code
that‚Äôs run in ephemeral runtime (Function as a Service or ‚ÄúFaaS&amp;quot;).&lt;/p&gt;
&lt;p&gt;To application developers, ‚Äúserverless‚Äù mean app where some certain
logic of it is still written by the developer but unlike traditional
architectures or microservices is run in stateless compute runtime that
is event-triggered, may only last for one invocation, and fully managed
by a cloud. Serverless helps developers to transfer responsibility for
keeping their apps up and running as well as scaling out their workload
capacity without involving DevOps/ops as we got used to.&lt;/p&gt;
&lt;p&gt;In this talk we will go through whole ‚Äúserverless‚Äù thing: from
decomposing app and its logic to microservices and further to smaller
bits, i.e. functions to defining data flow through functions and
building their fault-tolerant pipeline. Moreover, we will go through a
demo that highlights key takeaways:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;what are functions, what it could and could not be&lt;/li&gt;
&lt;li&gt;how to design scalable architecture without getting into troubles by
hitting concrete bottlenecks&lt;/li&gt;
&lt;li&gt;how serverless can help scaling in/out compute capacity for data
processing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The demo itself will include examples of applying serverless
architecture pattern to emotion recognition app based on TensorFlow and
OpenCV 3.3&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 15:15 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="serverless"></category><category term="image-processing"></category><category term="data-exploration"></category><category term="emotion-recognition"></category><category term="Deep-Learning"></category><category term="opencv"></category><category term="tensorflow"></category><category term="python3"></category></entry><entry><title>Deep Learning from zero to hero</title><link href="https://pyvideo.org/pycon-italia-2018/deep-learning-from-zero-to-hero.html" rel="alternate"></link><published>2018-04-20T00:00:00+00:00</published><updated>2018-04-20T00:00:00+00:00</updated><author><name>Gianluca Carucci</name></author><id>tag:pyvideo.org,2018-04-20:pycon-italia-2018/deep-learning-from-zero-to-hero.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Avete sentito parlare di Deep Learning ma credete che la teoria alla
base sia troppo complessa? Non avete una laurea in matematica e
statistica e pensate che il machine learning non faccia per voi? Niente
paura: avrete solo bisogno di una conoscenze di base di Python.&lt;/p&gt;
&lt;p&gt;Conoscete la regola dell‚Äô80/20? Con il 20% delle conoscenze potete
raggiungere l‚Äô80% dei risultati: in questo talk vi mostrer√≤ in modo
pratico tramite delle demo - alcuni trucchi per costruire dei buoni
modelli predittivi, evitando di perdere (tanto) tempo nella scelta dei
tools e delle librerie necessarie al vostro scopo.&lt;/p&gt;
&lt;p&gt;L‚Äôobbiettivo √® fornirvi le basi pratiche con cui scegliere un modello di
rete neurale, farne training e ottimizzarlo nel modo pi√π adatto alla
tipologia del problema che dovete affrontare.&lt;/p&gt;
&lt;p&gt;Agenda: - Introduzione al Deep Learning - Un esempio di training senza
scrivere codice - Sviluppare, testare e ottimizzare un modello reale -
Considerazioni finali&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;venerd√¨ 20 aprile&lt;/strong&gt; at 12:30 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</summary><category term="machine-learning"></category><category term="Keras"></category><category term="Deep-Learning"></category><category term="data-analysis"></category><category term="tensorflow"></category><category term="computer-science"></category><category term="neural network"></category></entry><entry><title>Hands-on introduction to Deep Learning with Keras and Tensorflow</title><link href="https://pyvideo.org/pydata-amsterdam-2018/hands-on-introduction-to-deep-learning-with-keras-and-tensorflow.html" rel="alternate"></link><published>2018-05-26T00:00:00+00:00</published><updated>2018-05-26T00:00:00+00:00</updated><author><name>Rodrigo Agundez</name></author><id>tag:pyvideo.org,2018-05-26:pydata-amsterdam-2018/hands-on-introduction-to-deep-learning-with-keras-and-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Deep Learning has already conquered areas such as image recognition, NLP, voice recognition, and is a must-know tool for every Data Practitioner. This tutorial for aspiring Deep Learners will consist of a quick blunt Deep Learning overview followed by a hands-on tutorial that will teach you how to get started using Keras and Tesorflow.&lt;/p&gt;
</summary><category term="deep learning"></category><category term="keras"></category><category term="tensorflow"></category></entry><entry><title>Deep Learning for Computer Vision</title><link href="https://pyvideo.org/pycon-de-2017/deep-learning-for-computer-vision.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Alex Conway</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/deep-learning-for-computer-vision.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Alex Conway&lt;/strong&gt; (&amp;#64;alxcnwy)
Alex is the founder &amp;amp; CTO of NumberBoost, a startup that builds deep learning applications. He previously worked as a quant for a hedge fund and as a data scientist for an e-commerce company. He has an honours degree in actuarial science and a MSc in statistics. He is one of the organizers of the Cape Town Deep Learning meet-up and has built numerous computer vision systems that run at scale in production predicting labels for millions of images per day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The state-of-the-art in image classification has skyrocketed thanks to the development of deep convolutional neural networks and increases in the amount of data and computing power available to train them. The top-5 error rate in the ImageNet competition to predict which of 1000 classes an image belongs to has plummeted from 28% error in 2010 to just 2.25% in 2017 (human level error is around 5%).&lt;/p&gt;
&lt;p&gt;In addition to being able to classify objects in images (including not hotdogs), deep learning can be used to automatically generate captions for images, convert photos into paintings, detect cancer in pathology slide images, and help self-driving cars ‚Äòsee‚Äô.&lt;/p&gt;
&lt;p&gt;The talk will give an overview of the cutting edge and some of the core mathematical concepts and will also include a short code-first tutorial to show how easy it is to get started using deep learning for computer vision in python‚Ä¶&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This talk is a crash course on convolutional neural networks and how to use them to solve 2 real-world applications at scale. The first is an image moderation system and the second is a visual similarity system where a user uploads an image of an item and the system returns visually similar items.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="business"></category><category term="data-science"></category><category term="use-case"></category><category term="deep learning"></category><category term="ai"></category><category term="machine learning"></category></entry><entry><title>Platform intrusion detection with deep learning</title><link href="https://pyvideo.org/pycon-de-2017/platform-intrusion-detection-with-deep-learning.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Carsten Pohl</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/platform-intrusion-detection-with-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Carsten Pohl&lt;/strong&gt; (&amp;#64;carstenpohl)&lt;/p&gt;
&lt;p&gt;Before joining REWE digital I worked for Zalando, Fraunhofer IML. My first computer was a VIC-20. I develop professionally software since the 90ies. I am one of the main developers of the new Big data platform of REWE digital, and have deep knowledge about all aspects of the platform. And I have no favorite member of One Direction.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shop.rewe.de is not only visited by human customers, but also by machines. We have built a deep learning platform using python with Keras, Tensorflow, on the Google infrastructure. In this talk we would like to show you how python is used in practice, supporting 2,5 million visitors each day.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shop.rewe.de is visited over 2 million times each day. Every visitor is producing thousands of requests in our micro service architecture. We are trying to give the best shopping experience for our customers, and try to keep our platform safe from bad bots. This is partly done by rule sets, and furthermore done by a platform that uses machine learning to classify bad behaviour. In this talk I would like to present our architecture that is not only able to fulfill this use case, but enables our data scientists in general to use our big data platform. the main scope will be the presentation of the use case. I will cover:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;different microservices written in python using flask, google bigquery, tensorflow and keras&lt;/li&gt;
&lt;li&gt;scaling this microservices with kubernetes, that automatically starts more predictors in case of higher load&lt;/li&gt;
&lt;li&gt;implementation of quantifiers written in python, that generates data suitable for neural networks using numpy&lt;/li&gt;
&lt;li&gt;examples from the real world behaviour of this plattform with lessons learned&lt;/li&gt;
&lt;li&gt;examples how we feature engineered the data by analysing the data stored&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="python"></category><category term="use-case"></category><category term="deep learning"></category><category term="e-commerce"></category></entry><entry><title>Rasa: open source conversational AI to build next generation chatbots</title><link href="https://pyvideo.org/pycon-de-2017/rasa-open-source-conversational-ai-to-build-next-generation-chatbots.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Joey Faulkner</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/rasa-open-source-conversational-ai-to-build-next-generation-chatbots.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Joey Faulkner&lt;/strong&gt; (&amp;#64;JoeyMFaulkner)&lt;/p&gt;
&lt;p&gt;I am a PhD student in machine learning/astronomy, and an AI researcher at Rasa. We make open source libraries for conversational AI.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Soon you will primarily communicate with your computer through conversation. At Rasa, we believe that this revolution in user experience should be available to everyone. In this spirit we have developed open source tools that use machine learning to make chatbots in a developer-friendly interface.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The revolution-in-waiting for user experience is conversational AI, and this revolution should be available to everyone. The ability to communicate with your computer via a fulfilling and useful conversation will change the way we approach user interaction. Recent advances in machine learning have made this goal not only possible to reach, but possible to bring to the developer community at large. At Rasa we have developed a set of open-source Python libraries which can comprehend natural language and handle complex, interesting conversations. We utilise deep learning to bypass existing rigid conversational norms (state machines, if/else statements, etc.) and allow developers to make awesome bots simply by talking to them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="python"></category><category term="machine learning"></category><category term="deep learning"></category><category term="open source"></category><category term="chatbot"></category><category term="natural language"></category><category term="ai"></category><category term="business"></category></entry><entry><title>Really Deep Neural Networks with PyTorch</title><link href="https://pyvideo.org/pycon-de-2017/really-deep-neural-networks-with-pytorch.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>David Dao</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/really-deep-neural-networks-with-pytorch.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;David Dao&lt;/strong&gt; (&amp;#64;dwddao)&lt;/p&gt;
&lt;p&gt;David is a PhD student at ETH Zurich, working on Deep Reinforcement Learning. Before joining ETH Zurich, he was an autonomous driving researcher at Mercedes-Benz Research in Silicon Valley and a graduate student at the Broad Institute of MIT and Harvard.&lt;/p&gt;
&lt;p&gt;David is a firm believer in open source and is organising Germany's largest deep learning meetup series, and Silicon Valley's self-driving AI series. He is a contributor to popular machine intelligence frameworks such as TensorFlow and PyTorch and speaks chinese with swabian accent.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Modern neural networks have hundreds of layers! How can we train such deep networks? Simply stacking layers on top doesn't work! This talk introduces the deep learning library PyTorch by explaining the exciting math, cool ideas and simple code behind what makes really deep neural networks work.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Modern neural networks consist of hundreds of computation layers! These very deep architectures consistently outperform shallower networks in a variety of tasks. However just simply stacking layers on top of each other won't work because the gradients are either vanishing or exploding during optimisation procedure. This talk explains the exciting math, cool ideas and elegant code that modern neural network architectures such as ResNets, HighwayNets and DenseNets are applying to circumvent the problem using PyTorch. PyTorch is a relatively new deep learning framework that is deeply integrated into Python. Unlike other frameworks such as TensorFlow and Theano, it uses tape-based automatic differentiation to run computation immediately, supports dynamic neural networks and provides a powerful GPU-accelerated Tensor library. The talk concludes with some real-world use-cases for very deep neural networks in chemical-genetic profiling and autonomous driving.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="deep learning"></category><category term="ai"></category><category term="machine learning"></category><category term="python"></category><category term="autonomous-driving"></category><category term="pytorch"></category></entry><entry><title>The eye of the Python, an eye tracking system. From zero to... what eye learned</title><link href="https://pyvideo.org/pycon-de-2017/the-eye-of-the-python-an-eye-tracking-system-from-zero-to-what-eye-learned.html" rel="alternate"></link><published>2017-10-25T00:00:00+00:00</published><updated>2017-10-25T00:00:00+00:00</updated><author><name>Samuel Mu√±oz Hidalgo</name></author><id>tag:pyvideo.org,2017-10-25:pycon-de-2017/the-eye-of-the-python-an-eye-tracking-system-from-zero-to-what-eye-learned.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Samuel Mu√±oz Hidalgo&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I am Samuel (Samu for friends). With a curious mind I studied computer science, then focused in machine learning and IoT as a professional career. I haven't given up on my plan to take over the world; that's why my coworkers know a crazy idea is coming out, when I can't hide any longer a mischievous smile. I like to meet people and understand other points of view, and in return I like to show what I can do and teach what I have mastered. But, what drives me crazy is rollerskating with disco music.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Is it possible to predict the point in the screen where a person is looking at? Easy to say but hard to do. An eye tracking system is the perfect project to learn the difficulties of applied machine learning. From gathering training data to building the final software with an acceptable performance.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this talk I will show how to build an eye tracking system from scratch.&lt;/p&gt;
&lt;p&gt;Once the approach (machine learning) and the tools (Python ecosystem) are set, the important tasks are:     Making users addicted to a game built with Pygame in order to generate data.     Unleashing the power of deep learning over GPU with Tensorflow to train an Artificial Neural Network.     Exploiting the training model in real time so as to control a computer with the eyes with PyAutoGUI.&lt;/p&gt;
&lt;p&gt;The path is full of pitfalls and every clear single step to the goal turns out to be a mountain of small but very important subtasks. Every iteration is a continuous struggle just to gain a bit of accuracy.&lt;/p&gt;
&lt;p&gt;Despite these efforts, at the very end we will see the difference between the theoretical and the real world. Our engineering skills will determine the usability of the new interface that allows us to move the mouse with our eyes; and we will learn that things don't need to be perfect, because humans are ...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Recorded at&lt;/strong&gt; PyCon.DE 2017 Karlsruhe: &lt;a class="reference external" href="https://de.pycon.org/"&gt;https://de.pycon.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Video editing&lt;/strong&gt;: Sebastian Neubauer &amp;amp; Andrei Dan&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;: Blender, Avidemux &amp;amp; Sonic Pi&lt;/p&gt;
</summary><category term="data-science"></category><category term="use-case"></category><category term="python"></category><category term="ai"></category><category term="deep learning"></category></entry><entry><title>Facial Analysis Techniques for Pythonista (and beyond!)</title><link href="https://pyvideo.org/pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html" rel="alternate"></link><published>2017-04-09T00:00:00+00:00</published><updated>2017-04-09T00:00:00+00:00</updated><author><name>Alex Casalboni</name></author><id>tag:pyvideo.org,2017-04-09:pycon-italia-2017/facial-analysis-techniques-for-pythonista-and-beyond.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The ability to detect, track, and analyze faces opens up a wide range of
interesting use cases, ranging from interactive smart applications and
real- time video processing, all the way to biometric security and
augmented reality.&lt;/p&gt;
&lt;p&gt;This talk will showcase the available &lt;strong&gt;tools built by the Python
community&lt;/strong&gt; and their corresponding pros &amp;amp; cons, limitations, and
complexity. While discussing the possible scenarios and what is actually
required to &lt;strong&gt;DIY with Python&lt;/strong&gt;, I will compare such handmade solutions
with &lt;strong&gt;Cloud-based products and APIs&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;: basic understanding of Python‚Äôs data science stack
(especially numpy).&lt;/p&gt;
</summary><category term="CloudComputing"></category><category term="aws"></category><category term="scikit-learn"></category><category term="scikit-image"></category><category term="google-cloud"></category><category term="Deep-Learning"></category><category term="opencv"></category><category term="scikits"></category><category term="cv"></category><category term="Machine Learning"></category><category term="Facial-Analysis"></category><category term="dlib"></category><category term="Artificial Intelligence"></category></entry><entry><title>AI, Machine Learning e Deep Learning: cosa cambia?</title><link href="https://pyvideo.org/pycon-italia-2017/ai-machine-learning-e-deep-learning-cosa-cambia.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Antonio Spadaro</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/ai-machine-learning-e-deep-learning-cosa-cambia.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Artificial Intelligence&lt;/strong&gt;, &lt;strong&gt;Machine Learning&lt;/strong&gt; e &lt;strong&gt;Deep Learning&lt;/strong&gt;:
cosa sono e qual‚Äô√® la loro storia? Ma soprattutto quali sono le
differenze tra questi tre?&lt;/p&gt;
&lt;p&gt;Questo talk √® orientato a coloro che non hanno alcuna base su nessuno di
questi argomenti&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="machine-learning"></category><category term="Artificial Intelligence"></category><category term="Machine Learning"></category></entry><entry><title>Machine Learning con Python: previsione in real-time della richiesta di energia elettrica</title><link href="https://pyvideo.org/pycon-italia-2017/machine-learning-con-python-previsione-in-real-time-della-richiesta-di-energia-elettrica.html" rel="alternate"></link><published>2017-04-08T00:00:00+00:00</published><updated>2017-04-08T00:00:00+00:00</updated><author><name>Felice Tuosto</name></author><id>tag:pyvideo.org,2017-04-08:pycon-italia-2017/machine-learning-con-python-previsione-in-real-time-della-richiesta-di-energia-elettrica.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Nel talk si parler√† di come attraverso il linguaggio Python sia
possibile risolvere un problema reale e complesso relativamente alla
trasmissione di energia elettrica. Verr√† spiegato il progetto
&lt;strong&gt;RealtimeLoadForecast&lt;/strong&gt; che √® stato sviluppato per un importante TSO
(Transmission System Operator). Si tratta di sistema predittivo che
permette di fornire in tempo reale ogni 15 minuti ed entro 5 minuti, le
previsioni delle serie storiche dei consumi di energia elettrica
relativi a circa 500 nodi elettrici.&lt;/p&gt;
&lt;p&gt;Si parler√† dei passi che occorre seguire per ottenere da un semplice
prototipo, un sistema &lt;em&gt;ingegnerizzato&lt;/em&gt; che lavori in tempo reale e di
come sono state utilizzate le librerie di Python per l‚Äôacquisizione,
manipolazione e processamento dei dati elettrici ed ambientali.&lt;/p&gt;
&lt;p&gt;Saranno descritte alcune tecniche algoritmiche e di Machine Learning per
ottenere dei modelli predittivi capaci di fornire previsioni accurate ma
con tempi di risposta sfidanti.&lt;/p&gt;
&lt;p&gt;Verr√† mostrato un &lt;em&gt;esempio concreto&lt;/em&gt; di implementazione di un algoritmo
predittivo basato sulla libreria Deep Learning &lt;strong&gt;Keras&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Per la comprensione del talk non sono necessari particolari requisiti se
non una conoscenza di base di programmazione in Python e di Machine
Learning.&lt;/p&gt;
</summary><category term="Forecasting"></category><category term="Genetic Algorithms"></category><category term="Keras"></category><category term="Data Mining"></category><category term="programming-paradigms"></category><category term="scikit-learn"></category><category term="bigdata"></category><category term="scalability"></category><category term="Deep-Learning"></category><category term="threading"></category><category term="realtime"></category><category term="Data-Scientist"></category><category term="database"></category><category term="machine-learning"></category><category term="mysql"></category><category term="signal-processing"></category><category term="LoadForecasting"></category><category term="cassandra"></category></entry><entry><title>The unconventional Introduction to Deep Learning</title><link href="https://pyvideo.org/pycon-italia-2017/the-unconventional-introduction-to-deep-learning.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Valerio Maggio</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/the-unconventional-introduction-to-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;If you are into Deep Learning, sooner or later, it inevitbly happens
that you‚Äôre asked at least once to explain what actually means &lt;strong&gt;Deep
Learning&lt;/strong&gt; , and what‚Äôs all the fuss about it.&lt;/p&gt;
&lt;p&gt;Indeed, answering this question in a proper way, may vary (and it has
to) depending on the kind of audience you‚Äôve been talking to.&lt;/p&gt;
&lt;p&gt;If you are talking to a machine learning experts, you have to
concentrate on what &lt;em&gt;deep&lt;/em&gt; means, for the multiple learning models you
can come up with. Most importarly, you have to convince them that a deep
learning model would work by far better than a more standard and robust
Random Forest or Support Vector Machine.&lt;/p&gt;
&lt;p&gt;On the other hand, if your audience is made up of engineers, they
[STRIKEOUT:don‚Äôt give a damn..] are definitely more interested in how
you implement your Artificial Neural Networks (ANN) rather than
understanding what are the implications of different &lt;em&gt;activations&lt;/em&gt; and
&lt;em&gt;optimizers&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Finally, if your audience is made up of data scientists - who are a good
mixture of the previous two, according to &lt;a class="reference external" href="http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram"&gt;Drew
Conway&lt;/a&gt;
- they are more or less interested in both the two aspects.&lt;/p&gt;
&lt;p&gt;The other way, that is the &lt;em&gt;unconventional way&lt;/em&gt;, to explain what Deep
Learning means, is from the perspective of the computational model it
requires to be properly effective. Therefore, you may want to talk about
ANN in terms of matrix multiplications algorithms, running on a (series
of) GPUs in parallel. And this is &lt;strong&gt;exactly&lt;/strong&gt; the perspecitve I intend
to pursue in this talk.&lt;/p&gt;
&lt;p&gt;This talk is for PyData scientists who are interested in understanding
Deep Learning models from this unconventional perspective, learning what
are the libraries and tools they may leverage for their experiments on
GPUs. Experienced engineers may likely benefit from this talk as well,
learning how they can make their models run fast(er).&lt;/p&gt;
</summary><category term="Keras"></category><category term="rumba"></category><category term="Deep-Learning"></category><category term="machine-learning"></category><category term="Theano"></category><category term="GPU"></category><category term="tensorflow"></category></entry><entry><title>Where are you going? An overview on machine learning models for human mobility</title><link href="https://pyvideo.org/pycon-italia-2017/where-are-you-going-an-overview-on-machine-learning-models-for-human-mobility.html" rel="alternate"></link><published>2017-04-07T00:00:00+00:00</published><updated>2017-04-07T00:00:00+00:00</updated><author><name>Gianni Barlacchi</name></author><id>tag:pyvideo.org,2017-04-07:pycon-italia-2017/where-are-you-going-an-overview-on-machine-learning-models-for-human-mobility.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The recent explosion of big mobility data, such as massive traces from
GPS devices and mobile phone networks, opened the door to the study of
the quantitative spatio-temporal patterns characterizing human mobility.
In this talk we will first introduce the audience in the world of human
mobility and related challenges. Then, we will briefly show how to deal
in Python with geo- mobility dataset and finally, we will go trough the
recent advances in machine learning and deep learning in the context
human mobility (e.g. prediction of the next visited place).&lt;/p&gt;
</summary><category term="Deep-Learning"></category><category term="human-mobility"></category><category term="machine-learning"></category></entry><entry><title>Data Science &amp; Data Visualization in Python. How to harness power of Python for social good?</title><link href="https://pyvideo.org/pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html" rel="alternate"></link><published>2017-06-30T00:00:00+00:00</published><updated>2017-06-30T00:00:00+00:00</updated><author><name>Radovan Kavicky</name></author><id>tag:pyvideo.org,2017-06-30:pydata-berlin-2017/data-science-data-visualization-in-python-how-to-harness-power-of-python-for-social-good.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python as an Open Data Science tool offers many libraries for data visualization and I will show you how to use and combine the best. I strongly believe that power of data is not only in the information &amp;amp; insight that data can provide us, Data is and can be really beautiful and can not only transform our perception but also the world that we all live in.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In my talk I will primarily focus on answering/offer the answer to these questions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why we need data science and why more and more people should be really interested in analyzing data and data visualization? (motivation)&lt;/li&gt;
&lt;li&gt;What is data science and how to start doing it in Python? (introduction of procedures, tools, most popular IDE-s for Python, etc.)&lt;/li&gt;
&lt;li&gt;What tools for data analysis and data visualization Python offers? (in each stage of analysis the best libraries will be shown for the specific purpose; as for data visualization we will focus particularly on Bokeh, Seaborn, Plotly and use of Jupyter Notebook and Plotly)&lt;/li&gt;
&lt;li&gt;How to 'unlock' the insight hidden in data through Python and how to use it to transform not only public administration or business, but ultimately the transformation of the whole society and economy towards the insight &amp;amp; knowledge based? (potential of data science)&lt;/li&gt;
&lt;li&gt;Open Data, Open Government Partnership, Open Public Administration &amp;amp; all the advantages of Open Data Science &amp;amp; Python. Data-Driven Approach. Everywhere. Now. (the end of talk +vision)&lt;/li&gt;
&lt;/ul&gt;
</summary><category term="python"></category><category term="data-science"></category><category term="data-visualization"></category><category term="analytics"></category><category term="PyData"></category><category term="PyDataBLN"></category><category term="PyDataBerlin"></category><category term="PyDataBA"></category><category term="PyDataBratislava"></category><category term="talk"></category><category term="Data"></category><category term="Bokeh"></category><category term="Social Good"></category><category term="datascience"></category><category term="jupyter"></category><category term="open science"></category><category term="open data science"></category><category term="DataVisualization"></category><category term="data-analysis"></category><category term="analysis"></category><category term="matplotlib"></category><category term="numpy"></category><category term="data wrangling"></category><category term="jupyter notebook"></category><category term="pandas"></category><category term="machine learning"></category><category term="deep learning"></category><category term="Open Data"></category><category term="Citizen Data Science"></category></entry><entry><title>DeepCare Chatbot - Generating answers to customers using Deep Learning and NLP</title><link href="https://pyvideo.org/pydata-barcelona-2017/deepcare-chatbot-generating-answers-to-customers-using-deep-learning-and-nlp.html" rel="alternate"></link><published>2017-05-20T15:45:00+02:00</published><updated>2017-05-20T15:45:00+02:00</updated><author><name>Pascal van Kooten</name></author><id>tag:pyvideo.org,2017-05-20:pydata-barcelona-2017/deepcare-chatbot-generating-answers-to-customers-using-deep-learning-and-nlp.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The DeepCare chatbot is capable of learning to answer customer questions. Using a hybrid approach of NLP and Deep Learning, it tries to combat logical fallacies that occur in pure deep learning bots, while still coming up with unique answers.&lt;/p&gt;
&lt;p&gt;In particular, it uses a sequence-to-sequence (seq2seq) long-short-term-memory LSTM deep learning model to capture intricacies in questions. As organisations cannot afford a bot making logical mistakes, verification through NLP is used. This two-step model prevents the downside of &amp;quot;no control&amp;quot; on deep learning, as well as the too static nature of classical rule based NLP models, and thus enables potentially higher quality answers.&lt;/p&gt;
&lt;p&gt;A live demo will be available at &lt;a class="reference external" href="http://deepcare.online"&gt;http://deepcare.online&lt;/a&gt; on the day of the talk.&lt;/p&gt;
</summary><category term="chatbot"></category><category term="nlp"></category><category term="deep learning"></category></entry><entry><title>Deep Learning para an√°lisis de im√°genes</title><link href="https://pyvideo.org/pyday-galicia-2017/deep-learning-para-analisis-de-imagenes.html" rel="alternate"></link><published>2017-06-10T10:55:00+02:00</published><updated>2017-06-10T10:55:00+02:00</updated><author><name>Javier S√°nchez Rois</name></author><id>tag:pyvideo.org,2017-06-10:pyday-galicia-2017/deep-learning-para-analisis-de-imagenes.html</id><summary type="html"></summary><category term="pyday"></category><category term="Galicia"></category><category term="deep learning"></category></entry><entry><title>H2O Deep Water with Python early sneek</title><link href="https://pyvideo.org/pydata-dc-2016/h2o-deep-water-with-python-early-sneek.html" rel="alternate"></link><published>2016-10-09T00:00:00+00:00</published><updated>2016-10-09T00:00:00+00:00</updated><author><name>Fabrizio Milo</name></author><id>tag:pyvideo.org,2016-10-09:pydata-dc-2016/h2o-deep-water-with-python-early-sneek.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData 2016&lt;/p&gt;
&lt;p&gt;Python as a language for DeepLearning. Python is emerging as the facto language to specify Deep Learning Networks. In this talk we will explore some of the popular libraries like Tensorflow and Keras to see the semantics used to describe such networks and look a bit more under the hood at what is the python layer actually doing for these well known deep learning libraries.&lt;/p&gt;
</summary><category term="deep learning"></category><category term="tensorflow"></category><category term="keras"></category></entry><entry><title>Implementing distributed grid search for deep learning using scikit learn and joblib</title><link href="https://pyvideo.org/pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html" rel="alternate"></link><published>2016-08-28T00:00:00+00:00</published><updated>2016-08-28T00:00:00+00:00</updated><author><name>Mike Heilman</name></author><id>tag:pyvideo.org,2016-08-28:pydata-chicago-2016/implementing-distributed-grid-search-for-deep-learning-using-scikit-learn-and-joblib.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Chicago 2016&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://mheilman.github.io/pydata_chicago_2016/#/"&gt;https://mheilman.github.io/pydata_chicago_2016/#/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Grid search over hyperparameters is an important but computationally expensive process in machine learning, particularly for deep learning and tree ensembles. In this talk, I will describe how one can use joblib's recently added custom backend functionality to do distributed grid search on Amazon EC2 for a TensorFlow deep text classifier that follows the scikit-learn estimator API.&lt;/p&gt;
</summary><category term="deep learning"></category><category term="distributed"></category><category term="learning"></category><category term="scikit"></category><category term="search"></category></entry><entry><title>Make sense of Deep Neural Networks using TensorBoard</title><link href="https://pyvideo.org/pybay-2016/make-sense-of-deep-neural-networks-using-tensorboard.html" rel="alternate"></link><published>2016-08-21T00:00:00+00:00</published><updated>2016-08-21T00:00:00+00:00</updated><author><name>Arpan Chakraborty</name></author><id>tag:pyvideo.org,2016-08-21:pybay-2016/make-sense-of-deep-neural-networks-using-tensorboard.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we look at some ways in which the TensorBoard utility can be used to better understand the structure of Deep Neural Networks and how they function. Best practices on how to use the TensorFlow Python API to make your models and results more interpretable are discussed.
‚Äã
Abstract
Deep Neural Networks are fast becoming the face of modern Machine Learning. But understanding how they work can be a real challenge, especially while you are trying to build a model. Google's recently published library, TensorFlow, includes a lesser-used utility called TensorBoard that can be used to visualize the structure of your neural network model and inspect how data flows through it. This talk will demonstrate some techniques which will help you use TensorBoard more effectively, and better understand how TensorFlow computations work. Code walkthroughs will be done in iPython notebooks, which will be made available to attendees.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bio:&lt;/strong&gt;
Arpan likes to find computing solutions to everyday problems. He is interested in human-computer interaction, robotics and cognitive science. He obtained his PhD from North Carolina State University, focusing on biologically-inspired computer vision. ‚ÄãWorking at Udacity, he develops content for artificial intelligence and machine learning courses.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://speakerdeck.com/pybay2016/arpan-chakraborty-make-sense-of-deep-neural-networks-using-tensorboard"&gt;https://speakerdeck.com/pybay2016/arpan-chakraborty-make-sense-of-deep-neural-networks-using-tensorboard&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="tensorflow"></category></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/pycon-japan-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-09-21T00:00:00+00:00</published><updated>2016-09-21T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-09-21:pycon-japan-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;TensorFlow is a new Open Source framework created at Google for building Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning libraries. But there are many problems. Which do you use? How do they compare to each other? How can you use a model that has been trained in your production application?&lt;/p&gt;
&lt;p&gt;TensorFlow is a new Open Source framework created at Google for building Deep Learning applications. Tensorflow allows you to construct easy to understand data flow graphs which form a mathematical and logical pipeline. Creating data flow graphs allow easier visualization of complicated algorithms as well as running the training operations over multiple hardware GPUs.&lt;/p&gt;
&lt;p&gt;Tensorflow data flow graphs and operations are written in Python. In this talk I will discuss how you can use TensorFlow to create Deep Learning applications. I will discuss how it compares to other Python machine learning libraries like Theano or Chainer. Finally, I will discuss how trained TensorFlow models could be deployed into a production system using TensorFlow Serve.&lt;/p&gt;
</summary><category term="tensorflow"></category><category term="deep learning"></category></entry><entry><title>Êï∞Â≠¶ÁöÑÂü∫Á§é„Åã„ÇâÂ≠¶„Å∂ Deep Learning</title><link href="https://pyvideo.org/pycon-japan-2016/shu-xue-de-ji-chu-karaxue-bu-deep-learning.html" rel="alternate"></link><published>2016-09-20T00:00:00+00:00</published><updated>2016-09-20T00:00:00+00:00</updated><author><name>Junya Kaneko</name></author><id>tag:pyvideo.org,2016-09-20:pycon-japan-2016/shu-xue-de-ji-chu-karaxue-bu-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;„Åø„Çì„Å™Â§ßÂ•Ω„Åç state of art „ÅÆ deep learning„ÄÇ„Åù„Çì„Å™ ÊäÄË°ì„Çí‰Ωø„Å£„Å¶„Åø„Åü„ÅÑÂÉï„Çâ„ÅÆ„Åü„ÇÅ„Å´Ê≤¢Â±±„É©„Ç§„Éñ„É©„É™„ÇÇÂá∫„Å¶„Åç„Åü„Çà„Å≠„ÄÇ„ÉÅ„É•„Éº„Éà„É™„Ç¢„É´„ÅØ„Åß„Åç„Åü„ÄÇ„Åß„ÇÇ„ÄÅÁµêÂ±Ä‰Ωï„ÇÑ„Å£„Å¶„Çì„ÅÆ„Åã„Çè„Åã„Çì„Å™„ÅÑ„ÄÇ „Çà„Åó„ÄÅÈ´òÊ†°ÁîüÁ®ãÂ∫¶„ÅÆÊï∞Â≠¶„ÅÆÁü•Ë≠ò„Åã„ÇâÂßã„ÇÅ„Å¶ deep learning „ÇíË°å„ÅÜ„Éó„É≠„Ç∞„É©„É†„Çí„ÄÅ‰∏ª„Å´ Numpy „ÇíÁî®„ÅÑ„Å¶„Çπ„ÇØ„É©„ÉÉ„ÉÅ„Åã„Çâ‰Ωú„Å£„Å¶„Åø„Çà„ÅÜÔºÅ&lt;/p&gt;
&lt;p&gt;Abstract&lt;/p&gt;
&lt;p&gt;Êú¨Ë¨õÊºî„ÅØ„ÄÅDeep learning „ÅÆ„É©„Ç§„Éñ„É©„É™„Çí‰Ωø„Å£„Å¶„Åø„Åü„ÅÑ or ‰Ωø„Å£„Å¶„Åø„Åü„Åë„Å©„ÄÅ‰Ωï„ÅåËµ∑„Åì„Å£„Å¶„ÅÑ„Çã„ÅÆ„Åã„Çè„Åã„Çâ„Å™„ÅÑ„ÄÇ‰Ωï„ÅåËµ∑„Åì„Å£„Å¶„Çã„ÅÆ„Åã„Çè„Åã„Çâ„Å™„ÅÑ„ÇÇ„ÅÆ„Åã„ÇâÁµêÊûú„Åå„Åß„Å¶„Åç„Å¶„ÇÇ„ÄÅÊ∞óÊåÅ„Å°ÊÇ™„Åè„Å¶‰Ωø„Åà„Å™„ÅÑ„ÄÇ&lt;/p&gt;
&lt;p&gt;„Åù„Çì„Å™ÊñπÂêë„Åë„Å´„ÄÅDeep learning „ÇíÊîØ„Åà„ÇãÊï∞Â≠¶„ÅÆÂü∫Á§éÁöÑ„Å™ÈÉ®ÂàÜ„ÇíÁü•„Çä„ÄÅ„Çπ„ÇØ„É©„ÉÉ„ÉÅ„Åã„Çâ deep learning „ÇíË°å„ÅÑ„ÄÅÂ≠¶ÁøíÈÅéÁ®ã„ÇíÁ¢∫Ë™ç„Åß„Åç„Çã„Éó„É≠„Ç∞„É©„É†„ÇíËá™„Çâ‰Ωú„Å£„Å¶„Åø„Çã„Åì„Å®„Åå„Åß„Åç„Çã„Çà„ÅÜ„Å´„Å™„Çã„Åü„ÇÅ„ÅÆ„Ç®„ÉÉ„Çª„É≥„Çπ„Çí„ÄÅÊï∞Â≠¶„Å®„Éó„É≠„Ç∞„É©„É†„Ç≥„Éº„Éâ„ÅÆ‰∏°Èù¢„Åã„ÇâÁ¥π‰ªã„Åó„Åæ„Åô„ÄÇ&lt;/p&gt;
&lt;p&gt;‰ªäÂõû„ÅØ Caltech 101 „Çí„Çµ„É≥„Éó„É´„Å®„Åó„Å¶Áî®„ÅÑ„Åü Deep Convolutional Neural Network (Deep CNN) „Å´„Çà„Çã‰∏ÄËà¨Áâ©‰ΩìË™çË≠ò„ÇíÂèñ„Çä‰∏ä„Åí„Åæ„Åô„ÄÇ&lt;/p&gt;
</summary><category term="deep learning"></category></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/pycon-apac-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-08-26:pycon-apac-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Î∞úÌëúÏûê: Ian Lewis / ianlewis
Ïä¨ÎùºÏù¥Îìú: &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-103-17-IanLewis.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-103-17-IanLewis.pdf&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category><category term="tensorflow"></category></entry><entry><title>Introduction to deep learning for machine vision tasks using Keras</title><link href="https://pyvideo.org/pycon-apac-2016/introduction-to-deep-learning-for-machine-vision-tasks-using-keras.html" rel="alternate"></link><published>2016-08-26T00:00:00+00:00</published><updated>2016-08-26T00:00:00+00:00</updated><author><name>Michael Amy</name></author><id>tag:pyvideo.org,2016-08-26:pycon-apac-2016/introduction-to-deep-learning-for-machine-vision-tasks-using-keras.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker : Michael Amy / cocoade
Slide : &lt;a class="reference external" href="https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-105-25-MichaelAmy.pdf"&gt;https://github.com/pythonkr/pyconapac-2016-files/raw/master/20160813-105-25-MichaelAmy.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Description :
&amp;quot;Neural networks&amp;quot; is the name of a machine learning technique that takes inspiration from biological brain cells.&lt;/p&gt;
&lt;p&gt;&amp;quot;Deep learning&amp;quot; is a term used to describe various 'deep' (many layered) networks that are capable of more sophisticated processing than the classic three-layer perceptrons.&lt;/p&gt;
&lt;p&gt;Recent advances in deep learning, especially the use of convolutional networks and the use of GPUs to process them instead of CPUs, have led to breakthroughs in performance on machine vision, natural language processing, and other tasks.&lt;/p&gt;
&lt;p&gt;Various frameworks have been introduced that facilitate easy experimentation with deep learning networks, amongst others, there are examples such as: Caffe, Theano, and recently Google's Tensorflow.&lt;/p&gt;
&lt;p&gt;Keras is a Python framework that uses Theano or Tensorflow as a backend.  It makes the building and testing of such networks much easier, as this session will demonstrate.&lt;/p&gt;
&lt;p&gt;This session will explain the concepts involved and go through some examples that will enable an intermediate-level python programmer to develop, train and validate their own deep learning networks to perform visual recognition tasks using deep convolutional networks.&lt;/p&gt;
&lt;p&gt;It will describe how to plan the basic network topology and will also highlight some common pitfalls and steps that can be taken to avoid them.&lt;/p&gt;
&lt;p&gt;Note: It will not explain how to set up a machine for these tasks, which is a job in itself. Nor will it explain detailed aspects of neural networks such as specifics of activation functions, optimizers or back propagation. There is just not enough time in the session. I will try to provide some useful links instead.&lt;/p&gt;
</summary><category term="deep learning"></category></entry><entry><title>What's new in Deep Learning?</title><link href="https://pyvideo.org/pydata-berlin-2016/whats-new-in-deep-learning.html" rel="alternate"></link><published>2016-05-31T00:00:00+00:00</published><updated>2016-05-31T00:00:00+00:00</updated><author><name>Kashif Rasul</name></author><id>tag:pyvideo.org,2016-05-31:pydata-berlin-2016/whats-new-in-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;PyData Berlin 2016&lt;/p&gt;
&lt;p&gt;&amp;#64;karpathy's recent tweet &amp;quot;BatchNorm, STN, DCGAN, DRAW, soft/hard attention, char-rnn, DeepDream, NeuralStyle, TensorFlow, ResNet, AlphaGo.. a lot happened over 1 year&amp;quot; sums up the many new aspects of Deep Learning research.&lt;/p&gt;
&lt;p&gt;In this talk I will review some of the highlights of deep learning in the context of Python deep learning frameworks.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://www.dropbox.com/s/b6lgvq6ijlutii4/new-deep-learning.pdf?dl=0"&gt;https://www.dropbox.com/s/b6lgvq6ijlutii4/new-deep-learning.pdf?dl=0&lt;/a&gt;&lt;/p&gt;
</summary><category term="deep learning"></category></entry><entry><title>An Introduction to Deep Learning</title><link href="https://pyvideo.org/europython-2016/an-introduction-to-deep-learning.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Geoff French</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/an-introduction-to-deep-learning.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Geoff French - An Introduction to Deep Learning
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/an-introduction-to-deep-learning"&gt;https://ep2016.europython.eu//conference/talks/an-introduction-to-deep-learning&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Deep learning: how it works, how to train a deep neural network, the
theory behind deep learning, recent developments and applications.
(length: 60 mins)&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;(length: 60 mins)    In the last few years, deep neural networks have
been used to generate state of the art results in image
classification, segmentation and object detection. They have also
successfully been used for speech recognition and textual analysis. In
this talk, I will give an introduction to deep neural networks. I will
cover how they work, how they are trained, and a little bit on how to
get going. I will briefly discuss some of the recent exciting and
amusing applications of deep learning. The talk will primarily focus
on image processing.&lt;/p&gt;
&lt;p&gt;If you completely new to deep learning, please attend T. Rashid's talk
'A Gentle Introduction to Neural Networks (with Python)'. His talk is
in the same room immediately before mine and his material is really
good and will give you a good grounding in what I will present to you.
:)
You may also want to attend I' Lewis' talk 'Deep Learning with Python
&amp;amp; TensorFlow' after Lunch in the PyCharm room to round it all off! :)&lt;/p&gt;
</summary><category term="deep learning"></category></entry><entry><title>Deep Learning with Python &amp; TensorFlow</title><link href="https://pyvideo.org/europython-2016/deep-learning-with-python-tensorflow.html" rel="alternate"></link><published>2016-08-05T00:00:00+00:00</published><updated>2016-08-05T00:00:00+00:00</updated><author><name>Ian Lewis</name></author><id>tag:pyvideo.org,2016-08-05:europython-2016/deep-learning-with-python-tensorflow.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Ian Lewis - Deep Learning with Python &amp;amp; TensorFlow
[EuroPython 2016]
[22 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow"&gt;https://ep2016.europython.eu//conference/talks/deep-learning-with-python-tensorflow&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning
libraries. But there are many problems when starting out on a machine
learning project. Which library do you use? How do they compare to
each other? How can you use a model that has been trained in your
production app? In this talk I will discuss how you can use TensorFlow
to create Deep Learning applications. I will discuss how it compares
to other Python machine learning libraries, and how to deploy into
production.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Python has lots of scientific, data analysis, and machine learning
libraries. But there are many problems when starting out on a machine
learning project. Which library do you use? How do they compare to
each other? How can you use a model that has been trained in your
production application?&lt;/p&gt;
&lt;p&gt;TensorFlow is a new Open-Source framework created at Google for
building Deep Learning applications. Tensorflow allows you to
construct easy to understand data flow graphs in Python which form a
mathematical and logical pipeline. Creating data flow graphs allow
easier visualization of complicated algorithms as well as running the
training operations over multiple hardware GPUs in parallel.&lt;/p&gt;
&lt;p&gt;In this talk I will discuss how you can use TensorFlow to create Deep
Learning applications. I will discuss how it compares to other Python
machine learning libraries like Theano or Chainer. Finally, I will
discuss how trained TensorFlow models could be deployed into a
production system using TensorFlow Serve.&lt;/p&gt;
</summary><category term="tensorflow"></category><category term="deep learning"></category></entry><entry><title>Deep Learning in Python</title><link href="https://pyvideo.org/pycon-za-2016/deep-learning-in-python.html" rel="alternate"></link><published>2016-10-07T00:00:00+00:00</published><updated>2016-10-07T00:00:00+00:00</updated><author><name>Tobias Brandt</name></author><id>tag:pyvideo.org,2016-10-07:pycon-za-2016/deep-learning-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;This talk will give an introduction to Neural Networks and Deep Learning
in Python. We will cover some of the history of Neural Networks and
obstacles that were encountered in the 1990s. This will then lead onto
the developments in 2006 and 2012 that lead to the resurgence of
interest in Neural Networks and the rebranding of the field as Deep
Learning. These developments will be illustrated by means of an extended
example of building a classifier of hand written digits on the MNIST
dataset. We will start with a simple Multi-Layer Perceptron and then
build this up into a Stacked Denoising Autoencoder. All code will be
developed using the Keras framework and TensorFlow and can be run on a
simple laptop.&lt;/p&gt;
</summary><category term="deep learning"></category><category term="keras"></category><category term="tensorflow"></category></entry></feed>