<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="https://pyvideo.org/" rel="alternate"></link><link href="https://pyvideo.org/feeds/speaker_sophie-rapoport.atom.xml" rel="self"></link><id>https://pyvideo.org/</id><updated>2018-05-11T00:00:00+00:00</updated><entry><title>Code like an accountant: Designing data systems for accuracy, resilience and auditability</title><link href="https://pyvideo.org/pycon-us-2018/code-like-an-accountant-designing-data-systems-for-accuracy-resilience-and-auditability.html" rel="alternate"></link><published>2018-05-11T00:00:00+00:00</published><updated>2018-05-11T00:00:00+00:00</updated><author><name>Sophie Rapoport</name></author><id>tag:pyvideo.org,2018-05-11:pycon-us-2018/code-like-an-accountant-designing-data-systems-for-accuracy-resilience-and-auditability.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;As engineers, we care a lot about the reliability of our applications. When a website falls over, pagers go off, and engineers burst into action to bring a site back to life.  Postmortems are written, and teams develop strategies to prevent similar failures in the future.&lt;/p&gt;
&lt;p&gt;But what about the reliability of our data? Would _you_ trust financial reports built on your data?&lt;/p&gt;
&lt;p&gt;If not, what can you do to improve data health? If you _would_ trust these reports, how can you prove to customers, investors, and auditors alike that they should too?&lt;/p&gt;
&lt;p&gt;In this talk, you’ll learn to apply strategies from the world of dev-ops to data. You’ll learn about questions auditors ask that can help you pinpoint data problems. You’ll also learn some accounting-specific tools for accurate and timely record keeping that I’ve found fascinating and helpful!&lt;/p&gt;
</summary></entry></feed>